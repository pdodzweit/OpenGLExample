Build started at 2021-10-01T10:41:03.168438
Main binary: c:\python3\python.exe
Build Options: -Dzlib:default_library=static -Db_ndebug=false -Dc_std=c17 -Dcpp_std=vc++latest -Db_vscrt=mt -Dllvm=enabled -Dshared-llvm=disabled -Dvulkan-drivers=swrast,amd -Dgallium-drivers=swrast,d3d12,zink -Dosmesa=true -Dshared-glapi=enabled -Dgles2=enabled -Dmicrosoft-clc=enabled -Dstatic-libclc=all -Dspirv-to-dxil=true -Dbuild-tests=true -Dwerror=true -Dwarning_level=2 -Dzlib:warning_level=1 -Dlibelf:warning_level=1 '-Dprefix=C:\builds\mesa\mesa\_install' -Dbuildtype=release -Ddefault_library=shared '-Dpkg_config_path=C:\llvm-10\lib\pkgconfig;C:\llvm-10\share\pkgconfig;C:\spirv-tools\lib\pkgconfig' '-Dcmake_prefix_path=C:\llvm-10'
Python system: Windows
The Meson build system
Version: 0.58.1
Source dir: C:\builds\mesa\mesa
Build dir: C:\builds\mesa\mesa\_build
Build type: native build
Program python found: YES (C:\python3\python.EXE)
Running command: C:\python3\python.EXE bin/meson_get_version.py
--- stdout ---
21.3.0-devel
--- stderr ---


Project name: mesa
Project version: 21.3.0-devel
Sanity testing C compiler: cl
Is cross compiler: False.
Sanity check compiler command line: cl C:\builds\mesa\mesa\_build\meson-private\sanitycheckc.c /FeC:\builds\mesa\mesa\_build\meson-private\sanitycheckc.exe /MT /nologo /showIncludes /link
Sanity check compile stdout:
sanitycheckc.c

-----
Sanity check compile stderr:

-----
Running test binary command: C:\builds\mesa\mesa\_build\meson-private\sanitycheckc.exe
C compiler for the host machine: cl (msvc 19.29.30038.1 "Microsoft (R) C/C++ Optimizing Compiler Version 19.29.30038.1 for x64")
C linker for the host machine: link link 14.29.30038.1
Sanity testing C++ compiler: cl
Is cross compiler: False.
Sanity check compiler command line: cl C:\builds\mesa\mesa\_build\meson-private\sanitycheckcpp.cc /FeC:\builds\mesa\mesa\_build\meson-private\sanitycheckcpp.exe /MT /nologo /showIncludes /link
Sanity check compile stdout:
sanitycheckcpp.cc

-----
Sanity check compile stderr:

-----
Running test binary command: C:\builds\mesa\mesa\_build\meson-private\sanitycheckcpp.exe
C++ compiler for the host machine: cl (msvc 19.29.30038.1 "Microsoft (R) C/C++ Optimizing Compiler Version 19.29.30038.1 for x64")
C++ linker for the host machine: link link 14.29.30038.1
Sanity testing C compiler: cl
Is cross compiler: False.
Sanity check compiler command line: cl C:\builds\mesa\mesa\_build\meson-private\sanitycheckc.c /FeC:\builds\mesa\mesa\_build\meson-private\sanitycheckc.exe /MT /nologo /showIncludes /link
Sanity check compile stdout:
sanitycheckc.c

-----
Sanity check compile stderr:

-----
Running test binary command: C:\builds\mesa\mesa\_build\meson-private\sanitycheckc.exe
C compiler for the build machine: cl (msvc 19.29.30038.1 "Microsoft (R) C/C++ Optimizing Compiler Version 19.29.30038.1 for x64")
C linker for the build machine: link link 14.29.30038.1
Sanity testing C++ compiler: cl
Is cross compiler: False.
Sanity check compiler command line: cl C:\builds\mesa\mesa\_build\meson-private\sanitycheckcpp.cc /FeC:\builds\mesa\mesa\_build\meson-private\sanitycheckcpp.exe /MT /nologo /showIncludes /link
Sanity check compile stdout:
sanitycheckcpp.cc

-----
Sanity check compile stderr:

-----
Running test binary command: C:\builds\mesa\mesa\_build\meson-private\sanitycheckcpp.exe
C++ compiler for the build machine: cl (msvc 19.29.30038.1 "Microsoft (R) C/C++ Optimizing Compiler Version 19.29.30038.1 for x64")
C++ linker for the build machine: link link 14.29.30038.1
Build machine cpu family: x86_64
Build machine cpu: x86_64
Host machine cpu family: x86_64
Host machine cpu: x86_64
Target machine cpu family: x86_64
Target machine cpu: x86_64
Pkg-config binary for MachineChoice.HOST is not cached.
Pkg-config binary missing from cross or native file, or env var undefined.
Trying a default Pkg-config fallback at pkg-config
Found pkg-config: C:\ProgramData\chocolatey\bin\pkg-config.EXE (0.28)
Determining dependency 'vulkan' with pkg-config executable 'C:\\ProgramData\\chocolatey\\bin\\pkg-config.EXE'
env[PKG_CONFIG_PATH]: C:/llvm-10/lib/pkgconfig;C:/llvm-10/share/pkgconfig;C:/spirv-tools/lib/pkgconfig
Called `C:\ProgramData\chocolatey\bin\pkg-config.EXE --modversion vulkan` -> 1

Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmp3ajbruyw
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmp3ajbruyw\testfile.cpp /FeC:\builds\mesa\mesa\_build\meson-private\tmp3ajbruyw\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od 

Code:
 #include<stdio.h>
        
        int main(void) {
            printf("%ld\n", (long)(sizeof(void *)));
            return 0;
        };
Compiler stdout:
 testfile.cpp
Note: including file: C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
Note: including file:  C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\corecrt.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vcruntime.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\sal.h
Note: including file:     C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\concurrencysal.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vadefs.h
Note: including file:  C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\corecrt_wstdio.h
Note: including file:   C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\corecrt_stdio_config.h

Compiler stderr:
 
Program stdout:

8

Program stderr:


Run-time dependency vulkan found: YES
Pkg-config binary for MachineChoice.HOST is cached.
Determining dependency 'DirectX-Headers' with pkg-config executable 'C:\\ProgramData\\chocolatey\\bin\\pkg-config.EXE'
env[PKG_CONFIG_PATH]: C:/llvm-10/lib/pkgconfig;C:/llvm-10/share/pkgconfig;C:/spirv-tools/lib/pkgconfig
Called `C:\ProgramData\chocolatey\bin\pkg-config.EXE --modversion DirectX-Headers` -> 1

CMake binary for MachineChoice.HOST is not cached
CMake binary missing from cross or native file, or env var undefined.
Trying a default CMake fallback at cmake
Found CMake: C:\Program Files\CMake\bin\cmake.EXE (3.20.5)
Extracting basic cmake information
!meson_ci!/ci_include "C:/builds/mesa/mesa/_build/meson-private/cmake_DirectX-Headers/CMakeMesonToolchainFile.cmake"
Try CMake generator: auto
!meson_ci!/ci_include "C:/builds/mesa/mesa/_build/meson-private/cmake_DirectX-Headers/CMakeLists.txt"
Calling CMake (['C:\\Program Files\\CMake\\bin\\cmake.EXE']) in C:\builds\mesa\mesa\_build\meson-private\cmake_DirectX-Headers with:
  - "--trace-expand"
  - "--trace-format=json-v1"
  - "--no-warn-unused-cli"
  - "--trace-redirect=cmake_trace.txt"
  - "-DCMAKE_TOOLCHAIN_FILE=C:/builds/mesa/mesa/_build/meson-private/cmake_DirectX-Headers/CMakeMesonToolchainFile.cmake"
  - "."
  - "-DCMAKE_PREFIX_PATH=C:/llvm-10"
  -- Module search paths:    ['C:/Program Files', 'C:/Program Files (x86)', 'C:/Program Files/CMake', 'C:/llvm-10']
  -- CMake root:             C:/Program Files/CMake/share/cmake-3.20
  -- CMake architectures:    []
  -- CMake lib search paths: ['lib', 'lib32', 'lib64', 'libx32', 'share']
Preliminary CMake check failed. Aborting.
Run-time dependency directx-headers found: NO (tried pkgconfig and cmake)
Looking for a fallback subproject for the dependency DirectX-Headers

Executing subproject DirectX-Headers 

Project name: DirectX-Headers
Project version: 1.4.9
C++ compiler for the host machine: cl (msvc 19.29.30038.1 "Microsoft (R) C/C++ Optimizing Compiler Version 19.29.30038.1 for x64")
C++ linker for the host machine: link link 14.29.30038.1
C++ compiler for the build machine: cl (msvc 19.29.30038.1 "Microsoft (R) C/C++ Optimizing Compiler Version 19.29.30038.1 for x64")
C++ linker for the build machine: link link 14.29.30038.1
Build targets in project: 1
Subproject DirectX-Headers finished.

Dependency DirectX-Headers found: YES 1.4.9 (overridden)
Pkg-config binary for MachineChoice.HOST is cached.
Determining dependency 'libclc' with pkg-config executable 'C:\\ProgramData\\chocolatey\\bin\\pkg-config.EXE'
env[PKG_CONFIG_PATH]: C:/llvm-10/lib/pkgconfig;C:/llvm-10/share/pkgconfig;C:/spirv-tools/lib/pkgconfig
Called `C:\ProgramData\chocolatey\bin\pkg-config.EXE --modversion libclc` -> 0
0.2.0
env[PKG_CONFIG_PATH]: C:/llvm-10/lib/pkgconfig;C:/llvm-10/share/pkgconfig;C:/spirv-tools/lib/pkgconfig
Called `C:\ProgramData\chocolatey\bin\pkg-config.EXE --cflags libclc` -> 0
-IC:/llvm-10/include
env[PKG_CONFIG_ALLOW_SYSTEM_LIBS]: 1
env[PKG_CONFIG_PATH]: C:/llvm-10/lib/pkgconfig;C:/llvm-10/share/pkgconfig;C:/spirv-tools/lib/pkgconfig
Called `C:\ProgramData\chocolatey\bin\pkg-config.EXE --libs libclc` -> 0
-LC:/llvm-10/share/clc
env[PKG_CONFIG_PATH]: C:/llvm-10/lib/pkgconfig;C:/llvm-10/share/pkgconfig;C:/spirv-tools/lib/pkgconfig
Called `C:\ProgramData\chocolatey\bin\pkg-config.EXE --libs libclc` -> 0
-LC:/llvm-10/share/clc
Run-time dependency libclc found: YES 0.2.0
Program C:\python3\python found: YES (C:\python3\python.exe)
Running command: C:\python3\python.exe -c 
from distutils.version import StrictVersion
import mako
assert StrictVersion(mako.__version__) > StrictVersion("0.8.0")
  
--- stdout ---

--- stderr ---


Running compile:
Working directory:  C:\Users\ContainerAdministrator\AppData\Local\Temp\tmp2bn1fldz
Command line:  cl C:\Users\ContainerAdministrator\AppData\Local\Temp\tmp2bn1fldz\testfile.c /nologo /showIncludes /EP /nologo /showIncludes /EP /Od /std:c17 

Code:
 
        #include <errno.h>
        #ifndef ETIME
        # define ETIME
        #endif
        "MESON_GET_DEFINE_DELIMITER"
ETIME
Compiler stdout:
 

        







#pragma once











#pragma once









#pragma once




























    







    
    


        


            
        
    
















#pragma once





















































































































































































































































































































































































































































































































































































































































































































#pragma region Input Buffer SAL 1 compatibility macros



























































































































































































































































































































































































































































































































































































































































































































































































#pragma endregion Input Buffer SAL 1 compatibility macros


































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    

    
    

























































































































































































































































    
    














































































































#pragma once




































































































































































































































































































































































































#pragma once



#pragma pack(push, 8 )



    


        
    





    


        
    




    





    


#pragma warning(push)
#pragma warning(disable: 4514 4820 )










    
    
        typedef unsigned __int64  uintptr_t;
    





    
    


        typedef char* va_list;
    





    











    
    






























































    void __cdecl __va_start(va_list* , ...);

    
    



    








































    



#pragma warning(pop) 
#pragma pack(pop)


#pragma warning(push)
#pragma warning(disable: 4514 4820 )


























    


    




__pragma(pack(push, 8))




    


        
    

















    




        
    



    


        
    







    
    





    









    







    





    



    



      
    







    typedef unsigned __int64 size_t;
    typedef __int64          ptrdiff_t;
    typedef __int64          intptr_t;













    typedef _Bool __vcrt_bool;




    



    



    




    
    typedef unsigned short wchar_t;



    


        
    



    

















    







    




        
    

    






        
        
    

    








    
        
    









    










    


        




    







    
        
    






    void __cdecl __security_init_cookie(void);

    






        void __cdecl __security_check_cookie( uintptr_t _StackCookie);
        __declspec(noreturn) void __cdecl __report_gsfailure( uintptr_t _StackCookie);
    


extern uintptr_t __security_cookie;


    
    
    


__pragma(pack(pop))

#pragma warning(pop) 













    


        
    




    














    



    











        
    



    


        
    


#pragma warning(push)
#pragma warning(disable: 4324 4514 4574 4710 4793 4820 4995 4996 28719 28726 28727 )


__pragma(pack(push, 8))







    




        
    





    



    




        
    





    



    









    






    





    










    














    


        
    





    





    





    






























    typedef _Bool __crt_bool;















    
        


            
        
    




















    


        
    







    



 






  


   
  
 








    

















        
    



    



    
        
    




























 void __cdecl _invalid_parameter_noinfo(void);
 __declspec(noreturn) void __cdecl _invalid_parameter_noinfo_noreturn(void);

__declspec(noreturn)
 void __cdecl _invoke_watson(
     wchar_t const* _Expression,
     wchar_t const* _FunctionName,
     wchar_t const* _FileName,
           unsigned int _LineNo,
           uintptr_t _Reserved);


    



        
        
        
        
        
        
        
        
        
        
        
        

    













    









    


        


    










    






        
    



    


        
    








































    







    





    


        


            
        
    













    


        



    



    
        
    





    
        
        
        
    





    
        
              
        


    





    
        
    





    
        
    







    









typedef int                           errno_t;
typedef unsigned short                wint_t;
typedef unsigned short                wctype_t;
typedef long                          __time32_t;
typedef __int64                       __time64_t;

typedef struct __crt_locale_data_public
{
      unsigned short const* _locale_pctype;
     int _locale_mb_cur_max;
               unsigned int _locale_lc_codepage;
} __crt_locale_data_public;

typedef struct __crt_locale_pointers
{
    struct __crt_locale_data*    locinfo;
    struct __crt_multibyte_data* mbcinfo;
} __crt_locale_pointers;

typedef __crt_locale_pointers* _locale_t;

typedef struct _Mbstatet
{ 
    unsigned long _Wchar;
    unsigned short _Byte, _State;
} _Mbstatet;

typedef _Mbstatet mbstate_t;










    


        typedef __time64_t time_t;
    




    



    typedef size_t rsize_t;











    

















































































































































        
        
        
        
        
        
        
        
        
        
        
        

    













































































    















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































        
        
        
        

        

            


            


            


            


            


            


            


            


            



            



            


            


            


            


            


            


            


            


            


            


            



            



            



            


            



            




            

            




            

            




            

            




            

            




            

            




            

            




            

            




            

        












































    


__pragma(pack(pop))


#pragma warning(pop) 


#pragma warning(push)
#pragma warning(disable: 4324 4514 4574 4710 4793 4820 4995 4996 28719 28726 28727 )


__pragma(pack(push, 8))




     int* __cdecl _errno(void);
    

     errno_t __cdecl _set_errno( int _Value);
     errno_t __cdecl _get_errno( int* _Value);

     unsigned long* __cdecl __doserrno(void);
    

     errno_t __cdecl _set_doserrno( unsigned long _Value);
     errno_t __cdecl _get_doserrno( unsigned long * _Value);











































    
    
    
    
    







    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    




__pragma(pack(pop))

#pragma warning(pop) 


        


        "MESON_GET_DEFINE_DELIMITER"
137 

Compiler stderr:
 testfile.c
Note: including file: C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\errno.h
Note: including file:  C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\corecrt.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vcruntime.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\sal.h
Note: including file:     C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\concurrencysal.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vadefs.h

Fetching value of define "ETIME" : 137  
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmppx7fip1z
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmppx7fip1z\testfile.c /FeC:\builds\mesa\mesa\_build\meson-private\tmppx7fip1z\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od /std:c17 kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib 

Code:
 
        #define bswap32 meson_disable_define_of_bswap32
        
        #include <limits.h>
        #undef bswap32
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char bswap32 (void);
        
        #if defined __stub_bswap32 || defined __stub___bswap32
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return bswap32 ();
        }
Compiler stdout:
 testfile.c
Note: including file: C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\limits.h
Note: including file:  C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vcruntime.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\sal.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\concurrencysal.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vadefs.h
testfile.obj : error LNK2019: unresolved external symbol bswap32 referenced in function main
C:\builds\mesa\mesa\_build\meson-private\tmppx7fip1z\output.exe : fatal error LNK1120: 1 unresolved externals

Compiler stderr:
 
Checking for function "bswap32" : NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmp9dbdt2wm
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmp9dbdt2wm\testfile.c /FeC:\builds\mesa\mesa\_build\meson-private\tmp9dbdt2wm\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od /std:c17 kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib 

Code:
 
        #define bswap64 meson_disable_define_of_bswap64
        
        #include <limits.h>
        #undef bswap64
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char bswap64 (void);
        
        #if defined __stub_bswap64 || defined __stub___bswap64
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return bswap64 ();
        }
Compiler stdout:
 testfile.c
Note: including file: C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\limits.h
Note: including file:  C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vcruntime.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\sal.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\concurrencysal.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vadefs.h
testfile.obj : error LNK2019: unresolved external symbol bswap64 referenced in function main
C:\builds\mesa\mesa\_build\meson-private\tmp9dbdt2wm\output.exe : fatal error LNK1120: 1 unresolved externals

Compiler stderr:
 
Checking for function "bswap64" : NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpk0zpwjc1
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpk0zpwjc1\testfile.c /FeC:\builds\mesa\mesa\_build\meson-private\tmpk0zpwjc1\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od /std:c17 kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib 

Code:
 
        #define clz meson_disable_define_of_clz
        
        #include <limits.h>
        #undef clz
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char clz (void);
        
        #if defined __stub_clz || defined __stub___clz
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return clz ();
        }
Compiler stdout:
 testfile.c
Note: including file: C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\limits.h
Note: including file:  C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vcruntime.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\sal.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\concurrencysal.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vadefs.h
testfile.obj : error LNK2019: unresolved external symbol clz referenced in function main
C:\builds\mesa\mesa\_build\meson-private\tmpk0zpwjc1\output.exe : fatal error LNK1120: 1 unresolved externals

Compiler stderr:
 
Checking for function "clz" : NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpa3g5x1_r
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpa3g5x1_r\testfile.c /FeC:\builds\mesa\mesa\_build\meson-private\tmpa3g5x1_r\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od /std:c17 kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib 

Code:
 
        #define clzll meson_disable_define_of_clzll
        
        #include <limits.h>
        #undef clzll
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char clzll (void);
        
        #if defined __stub_clzll || defined __stub___clzll
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return clzll ();
        }
Compiler stdout:
 testfile.c
Note: including file: C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\limits.h
Note: including file:  C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vcruntime.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\sal.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\concurrencysal.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vadefs.h
testfile.obj : error LNK2019: unresolved external symbol clzll referenced in function main
C:\builds\mesa\mesa\_build\meson-private\tmpa3g5x1_r\output.exe : fatal error LNK1120: 1 unresolved externals

Compiler stderr:
 
Checking for function "clzll" : NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmp1lma37jj
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmp1lma37jj\testfile.c /FeC:\builds\mesa\mesa\_build\meson-private\tmp1lma37jj\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od /std:c17 kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib 

Code:
 
        #define ctz meson_disable_define_of_ctz
        
        #include <limits.h>
        #undef ctz
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char ctz (void);
        
        #if defined __stub_ctz || defined __stub___ctz
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return ctz ();
        }
Compiler stdout:
 testfile.c
Note: including file: C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\limits.h
Note: including file:  C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vcruntime.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\sal.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\concurrencysal.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vadefs.h
testfile.obj : error LNK2019: unresolved external symbol ctz referenced in function main
C:\builds\mesa\mesa\_build\meson-private\tmp1lma37jj\output.exe : fatal error LNK1120: 1 unresolved externals

Compiler stderr:
 
Checking for function "ctz" : NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmp2v3qvdo7
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmp2v3qvdo7\testfile.c /FeC:\builds\mesa\mesa\_build\meson-private\tmp2v3qvdo7\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od /std:c17 kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib 

Code:
 
        #define expect meson_disable_define_of_expect
        
        #include <limits.h>
        #undef expect
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char expect (void);
        
        #if defined __stub_expect || defined __stub___expect
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return expect ();
        }
Compiler stdout:
 testfile.c
Note: including file: C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\limits.h
Note: including file:  C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vcruntime.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\sal.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\concurrencysal.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vadefs.h
testfile.obj : error LNK2019: unresolved external symbol expect referenced in function main
C:\builds\mesa\mesa\_build\meson-private\tmp2v3qvdo7\output.exe : fatal error LNK1120: 1 unresolved externals

Compiler stderr:
 
Checking for function "expect" : NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmp14_ijbn6
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmp14_ijbn6\testfile.c /FeC:\builds\mesa\mesa\_build\meson-private\tmp14_ijbn6\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od /std:c17 kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib 

Code:
 
        #define ffs meson_disable_define_of_ffs
        
        #include <limits.h>
        #undef ffs
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char ffs (void);
        
        #if defined __stub_ffs || defined __stub___ffs
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return ffs ();
        }
Compiler stdout:
 testfile.c
Note: including file: C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\limits.h
Note: including file:  C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vcruntime.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\sal.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\concurrencysal.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vadefs.h
testfile.obj : error LNK2019: unresolved external symbol ffs referenced in function main
C:\builds\mesa\mesa\_build\meson-private\tmp14_ijbn6\output.exe : fatal error LNK1120: 1 unresolved externals

Compiler stderr:
 
Checking for function "ffs" : NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmp3x5wvzte
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmp3x5wvzte\testfile.c /FeC:\builds\mesa\mesa\_build\meson-private\tmp3x5wvzte\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od /std:c17 kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib 

Code:
 
        #define ffsll meson_disable_define_of_ffsll
        
        #include <limits.h>
        #undef ffsll
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char ffsll (void);
        
        #if defined __stub_ffsll || defined __stub___ffsll
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return ffsll ();
        }
Compiler stdout:
 testfile.c
Note: including file: C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\limits.h
Note: including file:  C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vcruntime.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\sal.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\concurrencysal.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vadefs.h
testfile.obj : error LNK2019: unresolved external symbol ffsll referenced in function main
C:\builds\mesa\mesa\_build\meson-private\tmp3x5wvzte\output.exe : fatal error LNK1120: 1 unresolved externals

Compiler stderr:
 
Checking for function "ffsll" : NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpqlbdsnlk
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpqlbdsnlk\testfile.c /FeC:\builds\mesa\mesa\_build\meson-private\tmpqlbdsnlk\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od /std:c17 kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib 

Code:
 
        #define popcount meson_disable_define_of_popcount
        
        #include <limits.h>
        #undef popcount
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char popcount (void);
        
        #if defined __stub_popcount || defined __stub___popcount
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return popcount ();
        }
Compiler stdout:
 testfile.c
Note: including file: C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\limits.h
Note: including file:  C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vcruntime.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\sal.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\concurrencysal.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vadefs.h
testfile.obj : error LNK2019: unresolved external symbol popcount referenced in function main
C:\builds\mesa\mesa\_build\meson-private\tmpqlbdsnlk\output.exe : fatal error LNK1120: 1 unresolved externals

Compiler stderr:
 
Checking for function "popcount" : NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpv3emn_rr
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpv3emn_rr\testfile.c /FeC:\builds\mesa\mesa\_build\meson-private\tmpv3emn_rr\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od /std:c17 kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib 

Code:
 
        #define popcountll meson_disable_define_of_popcountll
        
        #include <limits.h>
        #undef popcountll
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char popcountll (void);
        
        #if defined __stub_popcountll || defined __stub___popcountll
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return popcountll ();
        }
Compiler stdout:
 testfile.c
Note: including file: C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\limits.h
Note: including file:  C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vcruntime.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\sal.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\concurrencysal.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vadefs.h
testfile.obj : error LNK2019: unresolved external symbol popcountll referenced in function main
C:\builds\mesa\mesa\_build\meson-private\tmpv3emn_rr\output.exe : fatal error LNK1120: 1 unresolved externals

Compiler stderr:
 
Checking for function "popcountll" : NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpaz6ykwqn
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpaz6ykwqn\testfile.c /FeC:\builds\mesa\mesa\_build\meson-private\tmpaz6ykwqn\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od /std:c17 kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib 

Code:
 
        #define unreachable meson_disable_define_of_unreachable
        
        #include <limits.h>
        #undef unreachable
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char unreachable (void);
        
        #if defined __stub_unreachable || defined __stub___unreachable
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return unreachable ();
        }
Compiler stdout:
 testfile.c
Note: including file: C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\limits.h
Note: including file:  C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vcruntime.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\sal.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\concurrencysal.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vadefs.h
testfile.obj : error LNK2019: unresolved external symbol unreachable referenced in function main
C:\builds\mesa\mesa\_build\meson-private\tmpaz6ykwqn\output.exe : fatal error LNK1120: 1 unresolved externals

Compiler stderr:
 
Checking for function "unreachable" : NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmprtmn8h6m
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmprtmn8h6m\testfile.c /FeC:\builds\mesa\mesa\_build\meson-private\tmprtmn8h6m\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od /std:c17 kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib 

Code:
 
        #define types_compatible_p meson_disable_define_of_types_compatible_p
        
        #include <limits.h>
        #undef types_compatible_p
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char types_compatible_p (void);
        
        #if defined __stub_types_compatible_p || defined __stub___types_compatible_p
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return types_compatible_p ();
        }
Compiler stdout:
 testfile.c
Note: including file: C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\limits.h
Note: including file:  C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vcruntime.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\sal.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\concurrencysal.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vadefs.h
testfile.obj : error LNK2019: unresolved external symbol types_compatible_p referenced in function main
C:\builds\mesa\mesa\_build\meson-private\tmprtmn8h6m\output.exe : fatal error LNK1120: 1 unresolved externals

Compiler stderr:
 
Checking for function "types_compatible_p" : NO 
Compiler for C supports function attribute const: NO 
Compiler for C supports function attribute flatten: NO 
Compiler for C supports function attribute malloc: NO 
Compiler for C supports function attribute pure: NO 
Compiler for C supports function attribute unused: NO 
Compiler for C supports function attribute warn_unused_result: NO 
Compiler for C supports function attribute weak: NO 
Compiler for C supports function attribute format: NO 
Compiler for C supports function attribute packed: NO 
Compiler for C supports function attribute returns_nonnull: NO 
Compiler for C supports function attribute alias: NO 
Compiler for C supports function attribute noreturn: NO 
Compiler for C supports function attribute visibility:hidden: NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmprbtigd1w
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmprbtigd1w\testfile.c /FoC:\builds\mesa\mesa\_build\meson-private\tmprbtigd1w\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od /std:c17 

Code:
 __uint128_t foo(void) { return 0; }
Compiler stdout:
 testfile.c
C:\builds\mesa\mesa\_build\meson-private\tmprbtigd1w\testfile.c(1): error C2061: syntax error: identifier 'foo'
C:\builds\mesa\mesa\_build\meson-private\tmprbtigd1w\testfile.c(1): error C2059: syntax error: ';'
C:\builds\mesa\mesa\_build\meson-private\tmprbtigd1w\testfile.c(1): error C2059: syntax error: '<parameter-list>'

Compiler stderr:
 
Checking if "__uint128_t" compiles: NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmps25u87hm
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmps25u87hm\testfile.c /FoC:\builds\mesa\mesa\_build\meson-private\tmps25u87hm\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od /wd4018 

Code:
 extern int i;
int i;

Compiler stdout:
 testfile.c

Compiler stderr:
 
Compiler for C supports arguments /wd4018: YES 
Using cached compile:
Cached command line:   

Code:
 extern int i;
int i;

Cached compiler stdout:
 testfile.c

Cached compiler stderr:
 
Compiler for C++ supports arguments /wd4018: YES (cached)
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpx2k0rhzi
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpx2k0rhzi\testfile.c /FoC:\builds\mesa\mesa\_build\meson-private\tmpx2k0rhzi\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od /wd4056 

Code:
 extern int i;
int i;

Compiler stdout:
 testfile.c

Compiler stderr:
 
Compiler for C supports arguments /wd4056: YES 
Using cached compile:
Cached command line:   

Code:
 extern int i;
int i;

Cached compiler stdout:
 testfile.c

Cached compiler stderr:
 
Compiler for C++ supports arguments /wd4056: YES (cached)
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpkyjwg357
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpkyjwg357\testfile.c /FoC:\builds\mesa\mesa\_build\meson-private\tmpkyjwg357\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od /wd4244 

Code:
 extern int i;
int i;

Compiler stdout:
 testfile.c

Compiler stderr:
 
Compiler for C supports arguments /wd4244: YES 
Using cached compile:
Cached command line:   

Code:
 extern int i;
int i;

Cached compiler stdout:
 testfile.c

Cached compiler stderr:
 
Compiler for C++ supports arguments /wd4244: YES (cached)
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpkak8z1ws
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpkak8z1ws\testfile.c /FoC:\builds\mesa\mesa\_build\meson-private\tmpkak8z1ws\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od /wd4267 

Code:
 extern int i;
int i;

Compiler stdout:
 testfile.c

Compiler stderr:
 
Compiler for C supports arguments /wd4267: YES 
Using cached compile:
Cached command line:   

Code:
 extern int i;
int i;

Cached compiler stdout:
 testfile.c

Cached compiler stderr:
 
Compiler for C++ supports arguments /wd4267: YES (cached)
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpnlc2se27
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpnlc2se27\testfile.c /FoC:\builds\mesa\mesa\_build\meson-private\tmpnlc2se27\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od /wd4305 

Code:
 extern int i;
int i;

Compiler stdout:
 testfile.c

Compiler stderr:
 
Compiler for C supports arguments /wd4305: YES 
Using cached compile:
Cached command line:   

Code:
 extern int i;
int i;

Cached compiler stdout:
 testfile.c

Cached compiler stderr:
 
Compiler for C++ supports arguments /wd4305: YES (cached)
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmp7ekdj9_l
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmp7ekdj9_l\testfile.c /FoC:\builds\mesa\mesa\_build\meson-private\tmp7ekdj9_l\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od /wd4351 

Code:
 extern int i;
int i;

Compiler stdout:
 testfile.c

Compiler stderr:
 
Compiler for C supports arguments /wd4351: YES 
Using cached compile:
Cached command line:   

Code:
 extern int i;
int i;

Cached compiler stdout:
 testfile.c

Cached compiler stderr:
 
Compiler for C++ supports arguments /wd4351: YES (cached)
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpphfy0awh
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpphfy0awh\testfile.c /FoC:\builds\mesa\mesa\_build\meson-private\tmpphfy0awh\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od /wd4756 

Code:
 extern int i;
int i;

Compiler stdout:
 testfile.c

Compiler stderr:
 
Compiler for C supports arguments /wd4756: YES 
Using cached compile:
Cached command line:   

Code:
 extern int i;
int i;

Cached compiler stdout:
 testfile.c

Cached compiler stderr:
 
Compiler for C++ supports arguments /wd4756: YES (cached)
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmp8ewha28h
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmp8ewha28h\testfile.c /FoC:\builds\mesa\mesa\_build\meson-private\tmp8ewha28h\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od /wd4800 

Code:
 extern int i;
int i;

Compiler stdout:
 testfile.c

Compiler stderr:
 
Compiler for C supports arguments /wd4800: YES 
Using cached compile:
Cached command line:   

Code:
 extern int i;
int i;

Cached compiler stdout:
 testfile.c

Cached compiler stderr:
 
Compiler for C++ supports arguments /wd4800: YES (cached)
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpvudhj__p
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpvudhj__p\testfile.c /FoC:\builds\mesa\mesa\_build\meson-private\tmpvudhj__p\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od /wd4996 

Code:
 extern int i;
int i;

Compiler stdout:
 testfile.c

Compiler stderr:
 
Compiler for C supports arguments /wd4996: YES 
Using cached compile:
Cached command line:   

Code:
 extern int i;
int i;

Cached compiler stdout:
 testfile.c

Cached compiler stderr:
 
Compiler for C++ supports arguments /wd4996: YES (cached)
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpftt_eqfd
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpftt_eqfd\testfile.c /FoC:\builds\mesa\mesa\_build\meson-private\tmpftt_eqfd\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od /wd4291 

Code:
 extern int i;
int i;

Compiler stdout:
 testfile.c

Compiler stderr:
 
Compiler for C supports arguments /wd4291: YES 
Using cached compile:
Cached command line:   

Code:
 extern int i;
int i;

Cached compiler stdout:
 testfile.c

Cached compiler stderr:
 
Compiler for C++ supports arguments /wd4291: YES (cached)
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpdsgmq7g_
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpdsgmq7g_\testfile.c /FoC:\builds\mesa\mesa\_build\meson-private\tmpdsgmq7g_\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od /wd4146 

Code:
 extern int i;
int i;

Compiler stdout:
 testfile.c

Compiler stderr:
 
Compiler for C supports arguments /wd4146: YES 
Using cached compile:
Cached command line:   

Code:
 extern int i;
int i;

Cached compiler stdout:
 testfile.c

Cached compiler stderr:
 
Compiler for C++ supports arguments /wd4146: YES (cached)
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmp1hudhzpe
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmp1hudhzpe\testfile.c /FoC:\builds\mesa\mesa\_build\meson-private\tmp1hudhzpe\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od /wd4200 

Code:
 extern int i;
int i;

Compiler stdout:
 testfile.c

Compiler stderr:
 
Compiler for C supports arguments /wd4200: YES 
Using cached compile:
Cached command line:   

Code:
 extern int i;
int i;

Cached compiler stdout:
 testfile.c

Cached compiler stderr:
 
Compiler for C++ supports arguments /wd4200: YES (cached)
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpe7p272qc
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpe7p272qc\testfile.c /FoC:\builds\mesa\mesa\_build\meson-private\tmpe7p272qc\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od /wd4624 

Code:
 extern int i;
int i;

Compiler stdout:
 testfile.c

Compiler stderr:
 
Compiler for C supports arguments /wd4624: YES 
Using cached compile:
Cached command line:   

Code:
 extern int i;
int i;

Cached compiler stdout:
 testfile.c

Cached compiler stderr:
 
Compiler for C++ supports arguments /wd4624: YES (cached)
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpb08awvs8
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpb08awvs8\testfile.c /FoC:\builds\mesa\mesa\_build\meson-private\tmpb08awvs8\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od /wd4309 

Code:
 extern int i;
int i;

Compiler stdout:
 testfile.c

Compiler stderr:
 
Compiler for C supports arguments /wd4309: YES 
Using cached compile:
Cached command line:   

Code:
 extern int i;
int i;

Cached compiler stdout:
 testfile.c

Cached compiler stderr:
 
Compiler for C++ supports arguments /wd4309: YES (cached)
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpi97w7291
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpi97w7291\testfile.c /FoC:\builds\mesa\mesa\_build\meson-private\tmpi97w7291\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od /wd4838 

Code:
 extern int i;
int i;

Compiler stdout:
 testfile.c

Compiler stderr:
 
Compiler for C supports arguments /wd4838: YES 
Using cached compile:
Cached command line:   

Code:
 extern int i;
int i;

Cached compiler stdout:
 testfile.c

Cached compiler stderr:
 
Compiler for C++ supports arguments /wd4838: YES (cached)
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmp1svzdlqf
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmp1svzdlqf\testfile.c /FoC:\builds\mesa\mesa\_build\meson-private\tmp1svzdlqf\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od /wd5105 

Code:
 extern int i;
int i;

Compiler stdout:
 testfile.c

Compiler stderr:
 
Compiler for C supports arguments /wd5105: YES 
Using cached compile:
Cached command line:   

Code:
 extern int i;
int i;

Cached compiler stdout:
 testfile.c

Cached compiler stderr:
 
Compiler for C++ supports arguments /wd5105: YES (cached)
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmp2die2q3k
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmp2die2q3k\testfile.c /FoC:\builds\mesa\mesa\_build\meson-private\tmp2die2q3k\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od /we4020 

Code:
 extern int i;
int i;

Compiler stdout:
 testfile.c

Compiler stderr:
 
Compiler for C supports arguments /we4020: YES 
Using cached compile:
Cached command line:   

Code:
 extern int i;
int i;

Cached compiler stdout:
 testfile.c

Cached compiler stderr:
 
Compiler for C++ supports arguments /we4020: YES (cached)
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpp01mrfqo
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpp01mrfqo\testfile.c /FoC:\builds\mesa\mesa\_build\meson-private\tmpp01mrfqo\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od /we4024 

Code:
 extern int i;
int i;

Compiler stdout:
 testfile.c

Compiler stderr:
 
Compiler for C supports arguments /we4024: YES 
Using cached compile:
Cached command line:   

Code:
 extern int i;
int i;

Cached compiler stdout:
 testfile.c

Cached compiler stderr:
 
Compiler for C++ supports arguments /we4024: YES (cached)
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmppz47biap
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmppz47biap\testfile.c /FoC:\builds\mesa\mesa\_build\meson-private\tmppz47biap\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od /Zc:__cplusplus 

Code:
 extern int i;
int i;

Compiler stdout:
 testfile.c

Compiler stderr:
 
Compiler for C supports arguments /Zc:__cplusplus: YES 
Using cached compile:
Cached command line:   

Code:
 extern int i;
int i;

Cached compiler stdout:
 testfile.c

Cached compiler stderr:
 
Compiler for C++ supports arguments /Zc:__cplusplus: YES (cached)
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmp83v94ga4
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmp83v94ga4\testfile.c /FoC:\builds\mesa\mesa\_build\meson-private\tmp83v94ga4\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od /std:c17 

Code:
 #include <stdint.h>
                  int main() {
                    struct {
                      uint64_t *v;
                    } x;
                    return (int)__atomic_load_n(x.v, __ATOMIC_ACQUIRE) &
                           (int)__atomic_add_fetch(x.v, (uint64_t)1, __ATOMIC_ACQ_REL);

                  }
Compiler stdout:
 testfile.c
Note: including file: C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\stdint.h
Note: including file:  C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vcruntime.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\sal.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\concurrencysal.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vadefs.h
C:\builds\mesa\mesa\_build\meson-private\tmp83v94ga4\testfile.c(6): error C2065: '__ATOMIC_ACQUIRE': undeclared identifier
C:\builds\mesa\mesa\_build\meson-private\tmp83v94ga4\testfile.c(7): error C2065: '__ATOMIC_ACQ_REL': undeclared identifier

Compiler stderr:
 
Checking if "GCC atomic builtins" compiles: NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpxwrth0r2
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpxwrth0r2\testfile.c /FeC:\builds\mesa\mesa\_build\meson-private\tmpxwrth0r2\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od /std:c17 kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib 

Code:
 #include <stdint.h>
                   uint64_t v;
                   int main() {
                     return __sync_add_and_fetch(&v, (uint64_t)1);
                   }
Compiler stdout:
 testfile.c
Note: including file: C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\stdint.h
Note: including file:  C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vcruntime.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\sal.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\concurrencysal.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vadefs.h
testfile.obj : error LNK2019: unresolved external symbol __sync_add_and_fetch referenced in function main
C:\builds\mesa\mesa\_build\meson-private\tmpxwrth0r2\output.exe : fatal error LNK1120: 1 unresolved externals

Compiler stderr:
 
Checking if "GCC 64bit atomics" with dependency not-found links: NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmp04kyk8tv
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmp04kyk8tv\testfile.c /FeC:\builds\mesa\mesa\_build\meson-private\tmp04kyk8tv\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od ws2_32.lib /link /nologo /release /nologo 

Code:
 int main(void) { return 0; }

Compiler stdout:
 testfile.c

Compiler stderr:
 
Library ws2_32 found: YES
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmp215nj8vz
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmp215nj8vz\testfile.c /FoC:\builds\mesa\mesa\_build\meson-private\tmp215nj8vz\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od /std:c17 

Code:
 
        #include <sys/sysmacros.h>
        int main(void) {
            /* If it's not defined as a macro, try to use as a symbol */
            #ifndef major
                major;
            #endif
            return 0;
        }
Compiler stdout:
 testfile.c
C:\builds\mesa\mesa\_build\meson-private\tmp215nj8vz\testfile.c(2): fatal error C1083: Cannot open include file: 'sys/sysmacros.h': No such file or directory

Compiler stderr:
 
Header <sys/sysmacros.h> has symbol "major" : NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmp8hgyhzzw
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmp8hgyhzzw\testfile.c /FoC:\builds\mesa\mesa\_build\meson-private\tmp8hgyhzzw\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od /std:c17 

Code:
 
        #include <sys/mkdev.h>
        int main(void) {
            /* If it's not defined as a macro, try to use as a symbol */
            #ifndef major
                major;
            #endif
            return 0;
        }
Compiler stdout:
 testfile.c
C:\builds\mesa\mesa\_build\meson-private\tmp8hgyhzzw\testfile.c(2): fatal error C1083: Cannot open include file: 'sys/mkdev.h': No such file or directory

Compiler stderr:
 
Header <sys/mkdev.h> has symbol "major" : NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmp0e_fq0a2
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmp0e_fq0a2\testfile.c /FoC:\builds\mesa\mesa\_build\meson-private\tmp0e_fq0a2\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od /std:c17 

Code:
 
        #include <sched.h>
Compiler stdout:
 testfile.c
C:\builds\mesa\mesa\_build\meson-private\tmp0e_fq0a2\testfile.c(2): fatal error C1083: Cannot open include file: 'sched.h': No such file or directory

Compiler stderr:
 
Check usable header "sched.h" : NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpr1lvozuh
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpr1lvozuh\testfile.c /FoC:\builds\mesa\mesa\_build\meson-private\tmpr1lvozuh\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od /std:c17 

Code:
 #include <sys/types.h>
        #include <sys/sysctl.h>
Compiler stdout:
 testfile.c
Note: including file: C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\sys/types.h
Note: including file:  C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\corecrt.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vcruntime.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\sal.h
Note: including file:     C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\concurrencysal.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vadefs.h
C:\builds\mesa\mesa\_build\meson-private\tmpr1lvozuh\testfile.c(2): fatal error C1083: Cannot open include file: 'sys/sysctl.h': No such file or directory

Compiler stderr:
 
Check usable header "sys/sysctl.h" : NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpzp0p9p3c
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpzp0p9p3c\testfile.c /FoC:\builds\mesa\mesa\_build\meson-private\tmpzp0p9p3c\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od /std:c17 

Code:
 
        #include <xlocale.h>
Compiler stdout:
 testfile.c
C:\builds\mesa\mesa\_build\meson-private\tmpzp0p9p3c\testfile.c(2): fatal error C1083: Cannot open include file: 'xlocale.h': No such file or directory

Compiler stderr:
 
Check usable header "xlocale.h" : NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpwawm1hzo
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpwawm1hzo\testfile.c /FoC:\builds\mesa\mesa\_build\meson-private\tmpwawm1hzo\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od /std:c17 

Code:
 
        #include <linux/futex.h>
Compiler stdout:
 testfile.c
C:\builds\mesa\mesa\_build\meson-private\tmpwawm1hzo\testfile.c(2): fatal error C1083: Cannot open include file: 'linux/futex.h': No such file or directory

Compiler stderr:
 
Check usable header "linux/futex.h" : NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpzsplmh2u
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpzsplmh2u\testfile.c /FoC:\builds\mesa\mesa\_build\meson-private\tmpzsplmh2u\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od /std:c17 

Code:
 
        #include <endian.h>
Compiler stdout:
 testfile.c
C:\builds\mesa\mesa\_build\meson-private\tmpzsplmh2u\testfile.c(2): fatal error C1083: Cannot open include file: 'endian.h': No such file or directory

Compiler stderr:
 
Check usable header "endian.h" : NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmp5che6m0q
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmp5che6m0q\testfile.c /FoC:\builds\mesa\mesa\_build\meson-private\tmp5che6m0q\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od /std:c17 

Code:
 
        #include <dlfcn.h>
Compiler stdout:
 testfile.c
C:\builds\mesa\mesa\_build\meson-private\tmp5che6m0q\testfile.c(2): fatal error C1083: Cannot open include file: 'dlfcn.h': No such file or directory

Compiler stderr:
 
Check usable header "dlfcn.h" : NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpuyneic0j
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpuyneic0j\testfile.c /FoC:\builds\mesa\mesa\_build\meson-private\tmpuyneic0j\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od /std:c17 

Code:
 
        #include <sys/shm.h>
Compiler stdout:
 testfile.c
C:\builds\mesa\mesa\_build\meson-private\tmpuyneic0j\testfile.c(2): fatal error C1083: Cannot open include file: 'sys/shm.h': No such file or directory

Compiler stderr:
 
Check usable header "sys/shm.h" : NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpvj6r6gi5
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpvj6r6gi5\testfile.c /FoC:\builds\mesa\mesa\_build\meson-private\tmpvj6r6gi5\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od /std:c17 

Code:
 
        #include <cet.h>
Compiler stdout:
 testfile.c
C:\builds\mesa\mesa\_build\meson-private\tmpvj6r6gi5\testfile.c(2): fatal error C1083: Cannot open include file: 'cet.h': No such file or directory

Compiler stderr:
 
Check usable header "cet.h" : NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpprqnzyvs
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpprqnzyvs\testfile.c /FoC:\builds\mesa\mesa\_build\meson-private\tmpprqnzyvs\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od /std:c17 

Code:
 
        #include <pthread_np.h>
Compiler stdout:
 testfile.c
C:\builds\mesa\mesa\_build\meson-private\tmpprqnzyvs\testfile.c(2): fatal error C1083: Cannot open include file: 'pthread_np.h': No such file or directory

Compiler stderr:
 
Check usable header "pthread_np.h" : NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpoigi4iph
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpoigi4iph\testfile.c /FeC:\builds\mesa\mesa\_build\meson-private\tmpoigi4iph\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od /std:c17 kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib 

Code:
 
        #define strtof meson_disable_define_of_strtof
        
        #include <limits.h>
        #undef strtof
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char strtof (void);
        
        #if defined __stub_strtof || defined __stub___strtof
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return strtof ();
        }
Compiler stdout:
 testfile.c
Note: including file: C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\limits.h
Note: including file:  C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vcruntime.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\sal.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\concurrencysal.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vadefs.h

Compiler stderr:
 
Checking for function "strtof" : YES 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpeunzozhv
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpeunzozhv\testfile.c /FeC:\builds\mesa\mesa\_build\meson-private\tmpeunzozhv\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od /std:c17 kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib 

Code:
 
        #define mkostemp meson_disable_define_of_mkostemp
        
        #include <limits.h>
        #undef mkostemp
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char mkostemp (void);
        
        #if defined __stub_mkostemp || defined __stub___mkostemp
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return mkostemp ();
        }
Compiler stdout:
 testfile.c
Note: including file: C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\limits.h
Note: including file:  C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vcruntime.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\sal.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\concurrencysal.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vadefs.h
testfile.obj : error LNK2019: unresolved external symbol mkostemp referenced in function main
C:\builds\mesa\mesa\_build\meson-private\tmpeunzozhv\output.exe : fatal error LNK1120: 1 unresolved externals

Compiler stderr:
 
Checking for function "mkostemp" : NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpm0w2xg_3
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpm0w2xg_3\testfile.c /FeC:\builds\mesa\mesa\_build\meson-private\tmpm0w2xg_3\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od /std:c17 kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib 

Code:
 
        #define timespec_get meson_disable_define_of_timespec_get
        
        #include <limits.h>
        #undef timespec_get
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char timespec_get (void);
        
        #if defined __stub_timespec_get || defined __stub___timespec_get
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return timespec_get ();
        }
Compiler stdout:
 testfile.c
Note: including file: C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\limits.h
Note: including file:  C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vcruntime.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\sal.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\concurrencysal.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vadefs.h
testfile.obj : error LNK2019: unresolved external symbol timespec_get referenced in function main
C:\builds\mesa\mesa\_build\meson-private\tmpm0w2xg_3\output.exe : fatal error LNK1120: 1 unresolved externals

Compiler stderr:
 
Checking for function "timespec_get" : NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpsjx3mu7b
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpsjx3mu7b\testfile.c /FeC:\builds\mesa\mesa\_build\meson-private\tmpsjx3mu7b\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od /std:c17 kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib 

Code:
 
        #define memfd_create meson_disable_define_of_memfd_create
        
        #include <limits.h>
        #undef memfd_create
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char memfd_create (void);
        
        #if defined __stub_memfd_create || defined __stub___memfd_create
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return memfd_create ();
        }
Compiler stdout:
 testfile.c
Note: including file: C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\limits.h
Note: including file:  C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vcruntime.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\sal.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\concurrencysal.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vadefs.h
testfile.obj : error LNK2019: unresolved external symbol memfd_create referenced in function main
C:\builds\mesa\mesa\_build\meson-private\tmpsjx3mu7b\output.exe : fatal error LNK1120: 1 unresolved externals

Compiler stderr:
 
Checking for function "memfd_create" : NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpep4zura1
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpep4zura1\testfile.c /FeC:\builds\mesa\mesa\_build\meson-private\tmpep4zura1\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od /std:c17 kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib 

Code:
 
        #define random_r meson_disable_define_of_random_r
        
        #include <limits.h>
        #undef random_r
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char random_r (void);
        
        #if defined __stub_random_r || defined __stub___random_r
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return random_r ();
        }
Compiler stdout:
 testfile.c
Note: including file: C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\limits.h
Note: including file:  C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vcruntime.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\sal.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\concurrencysal.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vadefs.h
testfile.obj : error LNK2019: unresolved external symbol random_r referenced in function main
C:\builds\mesa\mesa\_build\meson-private\tmpep4zura1\output.exe : fatal error LNK1120: 1 unresolved externals

Compiler stderr:
 
Checking for function "random_r" : NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpyc0be6r8
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpyc0be6r8\testfile.c /FeC:\builds\mesa\mesa\_build\meson-private\tmpyc0be6r8\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od /std:c17 kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib 

Code:
 
        #define flock meson_disable_define_of_flock
        
        #include <limits.h>
        #undef flock
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char flock (void);
        
        #if defined __stub_flock || defined __stub___flock
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return flock ();
        }
Compiler stdout:
 testfile.c
Note: including file: C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\limits.h
Note: including file:  C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vcruntime.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\sal.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\concurrencysal.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vadefs.h
testfile.obj : error LNK2019: unresolved external symbol flock referenced in function main
C:\builds\mesa\mesa\_build\meson-private\tmpyc0be6r8\output.exe : fatal error LNK1120: 1 unresolved externals

Compiler stderr:
 
Checking for function "flock" : NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmplfu_jc6b
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmplfu_jc6b\testfile.c /FeC:\builds\mesa\mesa\_build\meson-private\tmplfu_jc6b\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od /std:c17 kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib 

Code:
 
        #define strtok_r meson_disable_define_of_strtok_r
        
        #include <limits.h>
        #undef strtok_r
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char strtok_r (void);
        
        #if defined __stub_strtok_r || defined __stub___strtok_r
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return strtok_r ();
        }
Compiler stdout:
 testfile.c
Note: including file: C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\limits.h
Note: including file:  C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vcruntime.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\sal.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\concurrencysal.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vadefs.h
testfile.obj : error LNK2019: unresolved external symbol strtok_r referenced in function main
C:\builds\mesa\mesa\_build\meson-private\tmplfu_jc6b\output.exe : fatal error LNK1120: 1 unresolved externals

Compiler stderr:
 
Checking for function "strtok_r" : NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmp10olau49
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmp10olau49\testfile.c /FeC:\builds\mesa\mesa\_build\meson-private\tmp10olau49\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od /std:c17 kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib 

Code:
 
        #define getrandom meson_disable_define_of_getrandom
        
        #include <limits.h>
        #undef getrandom
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char getrandom (void);
        
        #if defined __stub_getrandom || defined __stub___getrandom
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return getrandom ();
        }
Compiler stdout:
 testfile.c
Note: including file: C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\limits.h
Note: including file:  C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vcruntime.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\sal.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\concurrencysal.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vadefs.h
testfile.obj : error LNK2019: unresolved external symbol getrandom referenced in function main
C:\builds\mesa\mesa\_build\meson-private\tmp10olau49\output.exe : fatal error LNK1120: 1 unresolved externals

Compiler stderr:
 
Checking for function "getrandom" : NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmps0o0mr_m
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmps0o0mr_m\testfile.c /FeC:\builds\mesa\mesa\_build\meson-private\tmps0o0mr_m\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od /std:c17 kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib 

Code:
 
        #define qsort_r meson_disable_define_of_qsort_r
        
        #include <limits.h>
        #undef qsort_r
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char qsort_r (void);
        
        #if defined __stub_qsort_r || defined __stub___qsort_r
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return qsort_r ();
        }
Compiler stdout:
 testfile.c
Note: including file: C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\limits.h
Note: including file:  C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vcruntime.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\sal.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\concurrencysal.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vadefs.h
testfile.obj : error LNK2019: unresolved external symbol qsort_r referenced in function main
C:\builds\mesa\mesa\_build\meson-private\tmps0o0mr_m\output.exe : fatal error LNK1120: 1 unresolved externals

Compiler stderr:
 
Checking for function "qsort_r" : NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmphjrsx1vb
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmphjrsx1vb\testfile.c /FeC:\builds\mesa\mesa\_build\meson-private\tmphjrsx1vb\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od /std:c17 kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib 

Code:
 
        #define qsort_s meson_disable_define_of_qsort_s
        
        #include <limits.h>
        #undef qsort_s
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char qsort_s (void);
        
        #if defined __stub_qsort_s || defined __stub___qsort_s
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return qsort_s ();
        }
Compiler stdout:
 testfile.c
Note: including file: C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\limits.h
Note: including file:  C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vcruntime.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\sal.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\concurrencysal.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vadefs.h

Compiler stderr:
 
Checking for function "qsort_s" : YES 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmp6xatkbop
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmp6xatkbop\testfile.c /FoC:\builds\mesa\mesa\_build\meson-private\tmp6xatkbop\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od /std:c17 -D_GNU_SOURCE 

Code:
 
        #include <errno.h>
        int main(void) {
            /* If it's not defined as a macro, try to use as a symbol */
            #ifndef program_invocation_name
                program_invocation_name;
            #endif
            return 0;
        }
Compiler stdout:
 testfile.c
Note: including file: C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\errno.h
Note: including file:  C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\corecrt.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vcruntime.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\sal.h
Note: including file:     C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\concurrencysal.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vadefs.h
C:\builds\mesa\mesa\_build\meson-private\tmp6xatkbop\testfile.c(6): error C2065: 'program_invocation_name': undeclared identifier

Compiler stderr:
 
Header <errno.h> has symbol "program_invocation_name" : NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmppmm5f7_9
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmppmm5f7_9\testfile.c /FoC:\builds\mesa\mesa\_build\meson-private\tmppmm5f7_9\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od /std:c17 

Code:
 #include <sys/types.h>
   #include <dirent.h>
        void bar(void) {
            struct dirent foo;
            foo.d_type;

        };
Compiler stdout:
 testfile.c
Note: including file: C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\sys/types.h
Note: including file:  C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\corecrt.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vcruntime.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\sal.h
Note: including file:     C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\concurrencysal.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vadefs.h
C:\builds\mesa\mesa\_build\meson-private\tmppmm5f7_9\testfile.c(2): fatal error C1083: Cannot open include file: 'dirent.h': No such file or directory

Compiler stderr:
 
Checking whether type "struct dirent" has member "d_type" : NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpruejxb7k
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpruejxb7k\testfile.c /FeC:\builds\mesa\mesa\_build\meson-private\tmpruejxb7k\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od /std:c17 kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -DPACKAGE_VERSION="21.3.0-devel" -DPACKAGE_BUGREPORT="https://gitlab.freedesktop.org/mesa/mesa/-/issues" -DENABLE_ST_OMX_BELLAGIO=0 -DENABLE_ST_OMX_TIZONIA=0 -DEGL_NO_X11 -DHAVE_WINDOWS_PLATFORM -D_WINDOWS -D_WIN32_WINNT=0x0A00 -DWINVER=0x0A00 -DPIPE_SUBSYSTEM_WINDOWS_USER -D_USE_MATH_DEFINES -DVC_EXTRALEAN -D_CRT_SECURE_NO_WARNINGS -D_CRT_SECURE_NO_DEPRECATE -D_SCL_SECURE_NO_WARNINGS -D_SCL_SECURE_NO_DEPRECATE -D_ALLOW_KEYWORD_MACROS -D_HAS_EXCEPTIONS=0 -DNOMINMAX -DMISSING_64BIT_ATOMICS -DHAVE_STRTOF -DHAVE_QSORT_S 

Code:
 
    #define _GNU_SOURCE
    #include <stdlib.h>
    #include <locale.h>
    #ifdef HAVE_XLOCALE_H
    #include <xlocale.h>
    #endif
    int main() {
      locale_t loc = newlocale(LC_CTYPE_MASK, "C", NULL);
      const char *s = "1.0";
      char *end;
      double d = strtod_l(s, end, loc);
      float f = strtof_l(s, end, loc);
      freelocale(loc);
      return 0;
    }
Compiler stdout:
 testfile.c
Note: including file: C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdlib.h
Note: including file:  C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\corecrt.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vcruntime.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\sal.h
Note: including file:     C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\concurrencysal.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vadefs.h
Note: including file:  C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\corecrt_malloc.h
Note: including file:  C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\corecrt_search.h
Note: including file:   C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stddef.h
Note: including file:  C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\corecrt_wstdlib.h
Note: including file:  C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\limits.h
Note: including file: C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\locale.h
C:\builds\mesa\mesa\_build\meson-private\tmpruejxb7k\testfile.c(9): error C2065: 'locale_t': undeclared identifier
C:\builds\mesa\mesa\_build\meson-private\tmpruejxb7k\testfile.c(9): error C2146: syntax error: missing ';' before identifier 'loc'
C:\builds\mesa\mesa\_build\meson-private\tmpruejxb7k\testfile.c(9): error C2065: 'loc': undeclared identifier
C:\builds\mesa\mesa\_build\meson-private\tmpruejxb7k\testfile.c(9): error C2065: 'LC_CTYPE_MASK': undeclared identifier
C:\builds\mesa\mesa\_build\meson-private\tmpruejxb7k\testfile.c(12): error C2065: 'loc': undeclared identifier
C:\builds\mesa\mesa\_build\meson-private\tmpruejxb7k\testfile.c(13): error C2065: 'loc': undeclared identifier
C:\builds\mesa\mesa\_build\meson-private\tmpruejxb7k\testfile.c(14): error C2065: 'loc': undeclared identifier

Compiler stderr:
 
Checking if "strtod has locale support" links: NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmp4cr9z2_s
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmp4cr9z2_s\testfile.c /FeC:\builds\mesa\mesa\_build\meson-private\tmp4cr9z2_s\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od /std:c17 kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib -Wl,-Bsymbolic 

Code:
 int main() { return 0; }
Compiler stdout:
 
Compiler stderr:
 cl : Command line error D8021 : invalid numeric argument '/Wl,-Bsymbolic'

Checking if "Bsymbolic" links: NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpyruaun7g
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpyruaun7g\testfile.c /FeC:\builds\mesa\mesa\_build\meson-private\tmpyruaun7g\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od /std:c17 kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib -Wl,--gc-sections 

Code:
 static char unused() { return 5; } int main() { return 0; }
Compiler stdout:
 
Compiler stderr:
 cl : Command line error D8021 : invalid numeric argument '/Wl,--gc-sections'

Checking if "gc-sections" links: NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpdyfwa748
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpdyfwa748\testfile.c /FeC:\builds\mesa\mesa\_build\meson-private\tmpdyfwa748\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od /std:c17 kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib -Wl,--version-script=C:/builds/mesa/mesa/build-support/conftest.map 

Code:
 int main() { return 0; }
Compiler stdout:
 
Compiler stderr:
 cl : Command line error D8021 : invalid numeric argument '/Wl,--version-script=C:/builds/mesa/mesa/build-support/conftest.map'

Checking if "version-script" links: NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmp1ldks1fc
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmp1ldks1fc\testfile.c /FeC:\builds\mesa\mesa\_build\meson-private\tmp1ldks1fc\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od /std:c17 kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib -Wl,--dynamic-list=C:/builds/mesa/mesa/build-support/conftest.dyn 

Code:
 int main() { return 0; }
Compiler stdout:
 
Compiler stderr:
 cl : Command line error D8021 : invalid numeric argument '/Wl,--dynamic-list=C:/builds/mesa/mesa/build-support/conftest.dyn'

Checking if "dynamic-list" links: NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmplel1piqc
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmplel1piqc\testfile.c /FeC:\builds\mesa\mesa\_build\meson-private\tmplel1piqc\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od /link -Wl,--build-id=sha1 

Code:
 int main(void) { return 0; }

Compiler stdout:
 testfile.c
LINK : warning LNK4044: unrecognized option '/Wl,--build-id=sha1'; ignored

Compiler stderr:
 
Compiler for C supports link arguments -Wl,--build-id=sha1: NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpxwylbtp_
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpxwylbtp_\testfile.c /FeC:\builds\mesa\mesa\_build\meson-private\tmpxwylbtp_\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od /std:c17 kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib 

Code:
 
        #define dlopen meson_disable_define_of_dlopen
        
        #include <limits.h>
        #undef dlopen
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char dlopen (void);
        
        #if defined __stub_dlopen || defined __stub___dlopen
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return dlopen ();
        }
Compiler stdout:
 testfile.c
Note: including file: C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\limits.h
Note: including file:  C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vcruntime.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\sal.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\concurrencysal.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vadefs.h
testfile.obj : error LNK2019: unresolved external symbol dlopen referenced in function main
C:\builds\mesa\mesa\_build\meson-private\tmpxwylbtp_\output.exe : fatal error LNK1120: 1 unresolved externals

Compiler stderr:
 
Checking for function "dlopen" : NO 
Library dl found: NO
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpn70riatc
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpn70riatc\testfile.c /FeC:\builds\mesa\mesa\_build\meson-private\tmpn70riatc\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od /std:c17 kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib 

Code:
 
        #define dladdr meson_disable_define_of_dladdr
        
        #include <limits.h>
        #undef dladdr
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char dladdr (void);
        
        #if defined __stub_dladdr || defined __stub___dladdr
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return dladdr ();
        }
Compiler stdout:
 testfile.c
Note: including file: C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\limits.h
Note: including file:  C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vcruntime.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\sal.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\concurrencysal.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vadefs.h
testfile.obj : error LNK2019: unresolved external symbol dladdr referenced in function main
C:\builds\mesa\mesa\_build\meson-private\tmpn70riatc\output.exe : fatal error LNK1120: 1 unresolved externals

Compiler stderr:
 
Checking for function "dladdr" with dependency -ldl: NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpq41mddz7
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpq41mddz7\testfile.c /FeC:\builds\mesa\mesa\_build\meson-private\tmpq41mddz7\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od /std:c17 kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib 

Code:
 
        #define dl_iterate_phdr meson_disable_define_of_dl_iterate_phdr
        
        #include <limits.h>
        #undef dl_iterate_phdr
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char dl_iterate_phdr (void);
        
        #if defined __stub_dl_iterate_phdr || defined __stub___dl_iterate_phdr
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return dl_iterate_phdr ();
        }
Compiler stdout:
 testfile.c
Note: including file: C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\limits.h
Note: including file:  C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vcruntime.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\sal.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\concurrencysal.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vadefs.h
testfile.obj : error LNK2019: unresolved external symbol dl_iterate_phdr referenced in function main
C:\builds\mesa\mesa\_build\meson-private\tmpq41mddz7\output.exe : fatal error LNK1120: 1 unresolved externals

Compiler stderr:
 
Checking for function "dl_iterate_phdr" : NO 
Pkg-config binary for MachineChoice.HOST is cached.
Determining dependency 'zlib' with pkg-config executable 'C:\\ProgramData\\chocolatey\\bin\\pkg-config.EXE'
env[PKG_CONFIG_PATH]: C:/llvm-10/lib/pkgconfig;C:/llvm-10/share/pkgconfig;C:/spirv-tools/lib/pkgconfig
Called `C:\ProgramData\chocolatey\bin\pkg-config.EXE --modversion zlib` -> 1

CMake binary for MachineChoice.HOST is cached.

Determining dependency 'ZLIB' with CMake executable 'C:\\Program Files\\CMake\\bin\\cmake.EXE'
!meson_ci!/ci_include "C:/builds/mesa/mesa/_build/meson-private/cmake_ZLIB/CMakeMesonToolchainFile.cmake"
Try CMake generator: auto
!meson_ci!/ci_include "C:/builds/mesa/mesa/_build/meson-private/cmake_ZLIB/CMakeLists.txt"
Calling CMake (['C:\\Program Files\\CMake\\bin\\cmake.EXE']) in C:\builds\mesa\mesa\_build\meson-private\cmake_ZLIB with:
  - "-DNAME=ZLIB"
  - "-DARCHS="
  - "-DVERSION="
  - "-DCOMPS="
  - "--trace-expand"
  - "--trace-format=json-v1"
  - "--no-warn-unused-cli"
  - "--trace-redirect=cmake_trace.txt"
  - "-DCMAKE_TOOLCHAIN_FILE=C:/builds/mesa/mesa/_build/meson-private/cmake_ZLIB/CMakeMesonToolchainFile.cmake"
  - "."
  - "-DCMAKE_PREFIX_PATH=C:/llvm-10"
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpdhk14kfj
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpdhk14kfj\testfile.cpp /FeC:\builds\mesa\mesa\_build\meson-private\tmpdhk14kfj\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od zlib1zlib.lib /link /nologo /release /nologo 

Code:
 int main(void) { return 0; }

Compiler stdout:
 testfile.cpp
LINK : fatal error LNK1181: cannot open input file 'zlib1zlib.lib'

Compiler stderr:
 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmp580hdi4h
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmp580hdi4h\testfile.cpp /nologo /showIncludes /EP /nologo /showIncludes /EP /Od 

Code:
 
        #ifdef __has_include
         #if !__has_include("zlib.h")
          #error "Header 'zlib.h' could not be found"
         #endif
        #else
         #include <zlib.h>
        #endif
Compiler stdout:
 

        
         
          
Compiler stderr:
 testfile.cpp
C:\builds\mesa\mesa\_build\meson-private\tmp580hdi4h\testfile.cpp(4): fatal error C1189: #error:  "Header 'zlib.h' could not be found"

Run-time dependency zlib found: NO (tried pkgconfig and cmake)
Looking for a fallback subproject for the dependency zlib
Downloading zlib source from http://zlib.net/fossils/zlib-1.2.11.tar.gz
Downloading zlib patch from https://github.com/mesonbuild/zlib/releases/download/1.2.11-2/zlib.zip

Executing subproject zlib 

Project name: zlib
Project version: 1.2.11
C compiler for the host machine: cl (msvc 19.29.30038.1 "Microsoft (R) C/C++ Optimizing Compiler Version 19.29.30038.1 for x64")
C linker for the host machine: link link 14.29.30038.1
C compiler for the build machine: cl (msvc 19.29.30038.1 "Microsoft (R) C/C++ Optimizing Compiler Version 19.29.30038.1 for x64")
C linker for the build machine: link link 14.29.30038.1
Windows resource compiler: Microsoft (R) Windows (R) Resource Compiler Version 10.0.10011.16384
Build targets in project: 3
Subproject zlib finished.

Dependency zlib from subproject subprojects/zlib-1.2.11 found: YES 1.2.11
Pkg-config binary for MachineChoice.HOST is cached.
Determining dependency 'libzstd' with pkg-config executable 'C:\\ProgramData\\chocolatey\\bin\\pkg-config.EXE'
env[PKG_CONFIG_PATH]: C:/llvm-10/lib/pkgconfig;C:/llvm-10/share/pkgconfig;C:/spirv-tools/lib/pkgconfig
Called `C:\ProgramData\chocolatey\bin\pkg-config.EXE --modversion libzstd` -> 1

CMake binary for MachineChoice.HOST is cached.
Preliminary CMake check failed. Aborting.
Run-time dependency libzstd found: NO (tried pkgconfig and cmake)
Run-time dependency threads found: YES
Library m found: NO
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpwpu9krwt
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpwpu9krwt\testfile.c /FeC:\builds\mesa\mesa\_build\meson-private\tmpwpu9krwt\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od regex.lib /link /nologo /release /nologo 

Code:
 int main(void) { return 0; }

Compiler stdout:
 testfile.c
LINK : fatal error LNK1181: cannot open input file 'regex.lib'

Compiler stderr:
 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpcc69vilp
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpcc69vilp\testfile.c /FeC:\builds\mesa\mesa\_build\meson-private\tmpcc69vilp\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od 

Code:
 #include<stdio.h>
        
        int main(void) {
            printf("%ld\n", (long)(sizeof(void *)));
            return 0;
        };
Compiler stdout:
 testfile.c
Note: including file: C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
Note: including file:  C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\corecrt.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vcruntime.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\sal.h
Note: including file:     C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\concurrencysal.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vadefs.h
Note: including file:  C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\corecrt_wstdio.h
Note: including file:   C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\corecrt_stdio_config.h

Compiler stderr:
 
Program stdout:

8

Program stderr:


Library regex found: NO
Pkg-config binary for MachineChoice.HOST is cached.
Determining dependency 'libdrm' with pkg-config executable 'C:\\ProgramData\\chocolatey\\bin\\pkg-config.EXE'
env[PKG_CONFIG_PATH]: C:/llvm-10/lib/pkgconfig;C:/llvm-10/share/pkgconfig;C:/spirv-tools/lib/pkgconfig
Called `C:\ProgramData\chocolatey\bin\pkg-config.EXE --modversion libdrm` -> 1

CMake binary for MachineChoice.HOST is cached.
Preliminary CMake check failed. Aborting.
Run-time dependency libdrm found: NO (tried pkgconfig and cmake)
CMake binary for MachineChoice.HOST is cached.

Determining dependency 'LLVM' with CMake executable 'C:\\Program Files\\CMake\\bin\\cmake.EXE'
!meson_ci!/ci_include "C:/builds/mesa/mesa/_build/meson-private/cmake_LLVM/CMakeMesonToolchainFile.cmake"
Try CMake generator: auto
!meson_ci!/ci_include "C:/builds/mesa/mesa/_build/meson-private/cmake_LLVM/CMakeLists.txt"
Calling CMake (['C:\\Program Files\\CMake\\bin\\cmake.EXE']) in C:\builds\mesa\mesa\_build\meson-private\cmake_LLVM with:
  - "-DNAME=LLVM"
  - "-DARCHS="
  - "-DVERSION="
  - "-DCOMPS="
  - "--trace-expand"
  - "--trace-format=json-v1"
  - "--no-warn-unused-cli"
  - "--trace-redirect=cmake_trace.txt"
  - "-DCMAKE_TOOLCHAIN_FILE=C:/builds/mesa/mesa/_build/meson-private/cmake_LLVM/CMakeMesonToolchainFile.cmake"
  - "-DLLVM_MESON_MODULES=bitwriter;engine;mcdisassembler;mcjit;core;executionengine;scalaropts;transformutils;instcombine;amdgpu;native;bitreader;ipo;coverage;target;linker;irreader;option;libdriver;lto;native;coroutines"
  - "."
  - "-DCMAKE_PREFIX_PATH=C:/llvm-10"
CMake TARGET:
  -- name:      LLVMBitWriter
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMAnalysis', 'LLVMCore', 'LLVMMC', 'LLVMObject', 'LLVMSupport']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMBitWriter.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:158 add_library(['LLVMBitWriter', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMAnalysis
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMBinaryFormat', 'LLVMCore', 'LLVMObject', 'LLVMProfileData', 'LLVMSupport']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMAnalysis.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:284 add_library(['LLVMAnalysis', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMCore
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMBinaryFormat', 'LLVMRemarks', 'LLVMSupport']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMCore.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:74 add_library(['LLVMCore', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMMC
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMSupport', 'LLVMBinaryFormat', 'LLVMDebugInfoCodeView']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMMC.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:298 add_library(['LLVMMC', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMObject
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMBitReader', 'LLVMCore', 'LLVMMC', 'LLVMBinaryFormat', 'LLVMMCParser', 'LLVMSupport', 'LLVMTextAPI']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMObject.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:326 add_library(['LLVMObject', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMSupport
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['psapi', 'shell32', 'ole32', 'uuid', 'advapi32', 'delayimp', '-delayload:shell32.dll', '-delayload:ole32.dll', 'LLVMDemangle']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['C', 'CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMSupport.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:57 add_library(['LLVMSupport', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMBinaryFormat
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMSupport']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMBinaryFormat.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:144 add_library(['LLVMBinaryFormat', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMProfileData
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMCore', 'LLVMSupport', 'LLVMDemangle']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMProfileData.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:550 add_library(['LLVMProfileData', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMRemarks
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMBitstreamReader', 'LLVMSupport']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMRemarks.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:347 add_library(['LLVMRemarks', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMDebugInfoCodeView
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMSupport', 'LLVMDebugInfoMSF']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMDebugInfoCodeView.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:375 add_library(['LLVMDebugInfoCodeView', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMBitReader
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMBitstreamReader', 'LLVMCore', 'LLVMSupport']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMBitReader.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:151 add_library(['LLVMBitReader', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMMCParser
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMMC', 'LLVMSupport']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMMCParser.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:305 add_library(['LLVMMCParser', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMTextAPI
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMSupport', 'LLVMBinaryFormat']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMTextAPI.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:571 add_library(['LLVMTextAPI', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMDemangle
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMDemangle.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:54 add_library(['LLVMDemangle', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMBitstreamReader
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMSupport']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMBitstreamReader.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:165 add_library(['LLVMBitstreamReader', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMDebugInfoMSF
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMSupport']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMDebugInfoMSF.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:368 add_library(['LLVMDebugInfoMSF', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMX86AsmParser
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMMC', 'LLVMMCParser', 'LLVMSupport', 'LLVMX86Desc', 'LLVMX86Info']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMX86AsmParser.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:508 add_library(['LLVMX86AsmParser', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMX86Desc
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMMC', 'LLVMMCDisassembler', 'LLVMSupport', 'LLVMX86Info', 'LLVMBinaryFormat']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMX86Desc.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:522 add_library(['LLVMX86Desc', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMX86Info
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMSupport']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMX86Info.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:529 add_library(['LLVMX86Info', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMMCDisassembler
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMMC', 'LLVMSupport']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMMCDisassembler.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:312 add_library(['LLVMMCDisassembler', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMX86CodeGen
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMAnalysis', 'LLVMAsmPrinter', 'LLVMCodeGen', 'LLVMCore', 'LLVMMC', 'LLVMSelectionDAG', 'LLVMSupport', 'LLVMTarget', 'LLVMX86Desc', 'LLVMX86Info', 'LLVMGlobalISel', 'LLVMProfileData', 'LLVMCFGuard']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMX86CodeGen.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:501 add_library(['LLVMX86CodeGen', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMAsmPrinter
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMAnalysis', 'LLVMBinaryFormat', 'LLVMCodeGen', 'LLVMCore', 'LLVMDebugInfoCodeView', 'LLVMDebugInfoDWARF', 'LLVMDebugInfoMSF', 'LLVMMC', 'LLVMMCParser', 'LLVMRemarks', 'LLVMSupport', 'LLVMTarget']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMAsmPrinter.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:123 add_library(['LLVMAsmPrinter', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMCodeGen
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMAnalysis', 'LLVMBitReader', 'LLVMBitWriter', 'LLVMCore', 'LLVMMC', 'LLVMProfileData', 'LLVMScalarOpts', 'LLVMSupport', 'LLVMTarget', 'LLVMTransformUtils']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMCodeGen.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:109 add_library(['LLVMCodeGen', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMSelectionDAG
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMAnalysis', 'LLVMCodeGen', 'LLVMCore', 'LLVMMC', 'LLVMSupport', 'LLVMTarget', 'LLVMTransformUtils']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMSelectionDAG.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:116 add_library(['LLVMSelectionDAG', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMTarget
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMAnalysis', 'LLVMCore', 'LLVMMC', 'LLVMSupport']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMTarget.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:452 add_library(['LLVMTarget', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMGlobalISel
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMAnalysis', 'LLVMCodeGen', 'LLVMCore', 'LLVMMC', 'LLVMSelectionDAG', 'LLVMSupport', 'LLVMTarget', 'LLVMTransformUtils']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMGlobalISel.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:137 add_library(['LLVMGlobalISel', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMCFGuard
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMCore', 'LLVMSupport']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMCFGuard.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:270 add_library(['LLVMCFGuard', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMDebugInfoDWARF
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMBinaryFormat', 'LLVMObject', 'LLVMMC', 'LLVMSupport']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMDebugInfoDWARF.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:354 add_library(['LLVMDebugInfoDWARF', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMScalarOpts
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMAggressiveInstCombine', 'LLVMAnalysis', 'LLVMCore', 'LLVMInstCombine', 'LLVMSupport', 'LLVMTransformUtils']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMScalarOpts.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:228 add_library(['LLVMScalarOpts', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMTransformUtils
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMAnalysis', 'LLVMCore', 'LLVMSupport']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMTransformUtils.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:200 add_library(['LLVMTransformUtils', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMAggressiveInstCombine
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMAnalysis', 'LLVMCore', 'LLVMSupport', 'LLVMTransformUtils']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMAggressiveInstCombine.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:214 add_library(['LLVMAggressiveInstCombine', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMInstCombine
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMAnalysis', 'LLVMCore', 'LLVMSupport', 'LLVMTransformUtils']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMInstCombine.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:221 add_library(['LLVMInstCombine', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMX86Disassembler
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMMCDisassembler', 'LLVMSupport', 'LLVMX86Info']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMX86Disassembler.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:515 add_library(['LLVMX86Disassembler', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMMCJIT
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMCore', 'LLVMExecutionEngine', 'LLVMObject', 'LLVMRuntimeDyld', 'LLVMSupport', 'LLVMTarget']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMMCJIT.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:417 add_library(['LLVMMCJIT', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMExecutionEngine
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMCore', 'LLVMMC', 'LLVMObject', 'LLVMRuntimeDyld', 'LLVMSupport', 'LLVMTarget']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMExecutionEngine.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:396 add_library(['LLVMExecutionEngine', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMRuntimeDyld
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMCore', 'LLVMMC', 'LLVMObject', 'LLVMSupport']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMRuntimeDyld.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:445 add_library(['LLVMRuntimeDyld', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMAMDGPUAsmParser
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMMC', 'LLVMMCParser', 'LLVMAMDGPUDesc', 'LLVMAMDGPUInfo', 'LLVMAMDGPUUtils', 'LLVMSupport']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMAMDGPUAsmParser.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:466 add_library(['LLVMAMDGPUAsmParser', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMAMDGPUDesc
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMCore', 'LLVMMC', 'LLVMAMDGPUInfo', 'LLVMAMDGPUUtils', 'LLVMSupport', 'LLVMBinaryFormat']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMAMDGPUDesc.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:480 add_library(['LLVMAMDGPUDesc', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMAMDGPUInfo
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMSupport']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMAMDGPUInfo.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:487 add_library(['LLVMAMDGPUInfo', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMAMDGPUUtils
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMCore', 'LLVMMC', 'LLVMBinaryFormat', 'LLVMSupport']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMAMDGPUUtils.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:494 add_library(['LLVMAMDGPUUtils', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMAMDGPUCodeGen
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMAnalysis', 'LLVMAsmPrinter', 'LLVMCodeGen', 'LLVMCore', 'LLVMipo', 'LLVMMC', 'LLVMPasses', 'LLVMAMDGPUDesc', 'LLVMAMDGPUInfo', 'LLVMAMDGPUUtils', 'LLVMScalarOpts', 'LLVMSelectionDAG', 'LLVMSupport', 'LLVMTarget', 'LLVMTransformUtils', 'LLVMVectorize', 'LLVMGlobalISel', 'LLVMBinaryFormat', 'LLVMMIRParser']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMAMDGPUCodeGen.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:459 add_library(['LLVMAMDGPUCodeGen', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMipo
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMAggressiveInstCombine', 'LLVMAnalysis', 'LLVMBitReader', 'LLVMBitWriter', 'LLVMCore', 'LLVMFrontendOpenMP', 'LLVMInstCombine', 'LLVMIRReader', 'LLVMLinker', 'LLVMObject', 'LLVMProfileData', 'LLVMScalarOpts', 'LLVMSupport', 'LLVMTransformUtils', 'LLVMVectorize', 'LLVMInstrumentation']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMipo.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:235 add_library(['LLVMipo', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMPasses
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMAggressiveInstCombine', 'LLVMAnalysis', 'LLVMCore', 'LLVMCoroutines', 'LLVMHelloNew', 'LLVMipo', 'LLVMInstCombine', 'LLVMObjCARCOpts', 'LLVMScalarOpts', 'LLVMSupport', 'LLVMTarget', 'LLVMTransformUtils', 'LLVMVectorize', 'LLVMInstrumentation']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMPasses.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:564 add_library(['LLVMPasses', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMVectorize
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMAnalysis', 'LLVMCore', 'LLVMSupport', 'LLVMTransformUtils']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMVectorize.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:242 add_library(['LLVMVectorize', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMMIRParser
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMAsmParser', 'LLVMBinaryFormat', 'LLVMCodeGen', 'LLVMCore', 'LLVMMC', 'LLVMSupport', 'LLVMTarget']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMMIRParser.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:130 add_library(['LLVMMIRParser', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMFrontendOpenMP
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMCore', 'LLVMSupport', 'LLVMTransformUtils']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMFrontendOpenMP.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:193 add_library(['LLVMFrontendOpenMP', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMIRReader
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMAsmParser', 'LLVMBitReader', 'LLVMCore', 'LLVMSupport']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMIRReader.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:102 add_library(['LLVMIRReader', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMLinker
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMCore', 'LLVMObject', 'LLVMSupport', 'LLVMTransformUtils']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMLinker.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:277 add_library(['LLVMLinker', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMInstrumentation
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMAnalysis', 'LLVMCore', 'LLVMMC', 'LLVMSupport', 'LLVMTransformUtils', 'LLVMProfileData']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMInstrumentation.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:207 add_library(['LLVMInstrumentation', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMCoroutines
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMAnalysis', 'LLVMCore', 'LLVMipo', 'LLVMScalarOpts', 'LLVMSupport', 'LLVMTransformUtils']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMCoroutines.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:263 add_library(['LLVMCoroutines', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMHelloNew
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMCore', 'LLVMSupport']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMHelloNew.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:249 add_library(['LLVMHelloNew', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMObjCARCOpts
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMAnalysis', 'LLVMCore', 'LLVMSupport', 'LLVMTransformUtils']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMObjCARCOpts.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:256 add_library(['LLVMObjCARCOpts', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMAsmParser
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMBinaryFormat', 'LLVMCore', 'LLVMSupport']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMAsmParser.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:536 add_library(['LLVMAsmParser', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMAMDGPUDisassembler
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMAMDGPUDesc', 'LLVMAMDGPUInfo', 'LLVMAMDGPUUtils', 'LLVMMC', 'LLVMMCDisassembler', 'LLVMSupport']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMAMDGPUDisassembler.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:473 add_library(['LLVMAMDGPUDisassembler', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMCoverage
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMCore', 'LLVMObject', 'LLVMProfileData', 'LLVMSupport']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMCoverage.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:557 add_library(['LLVMCoverage', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMOption
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMSupport']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMOption.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:340 add_library(['LLVMOption', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMLibDriver
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMBinaryFormat', 'LLVMBitReader', 'LLVMObject', 'LLVMOption', 'LLVMSupport', 'LLVMBinaryFormat', 'LLVMBitReader', 'LLVMObject', 'LLVMOption', 'LLVMSupport']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMLibDriver.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:585 add_library(['LLVMLibDriver', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMLTO
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMAggressiveInstCombine', 'LLVMAnalysis', 'LLVMBinaryFormat', 'LLVMBitReader', 'LLVMBitWriter', 'LLVMCodeGen', 'LLVMCore', 'LLVMExtensions', 'LLVMipo', 'LLVMInstCombine', 'LLVMLinker', 'LLVMMC', 'LLVMObjCARCOpts', 'LLVMObject', 'LLVMPasses', 'LLVMRemarks', 'LLVMScalarOpts', 'LLVMSupport', 'LLVMTarget', 'LLVMTransformUtils']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMLTO.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:291 add_library(['LLVMLTO', 'STATIC', 'IMPORTED'])
CMake TARGET:
  -- name:      LLVMExtensions
  -- type:      STATIC
  -- imported:  True
  -- properties: {
      'INTERFACE_LINK_LIBRARIES': ['LLVMSupport']
      'IMPORTED_CONFIGURATIONS': ['RELEASE']
      'IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE': ['CXX']
      'IMPORTED_LOCATION_RELEASE': ['C:/llvm-10/lib/LLVMExtensions.lib']
     }
  -- tline: CMake TRACE: C:\llvm-10\lib\cmake\llvm\LLVMExports.cmake:179 add_library(['LLVMExtensions', 'STATIC', 'IMPORTED'])
Include Dirs:         []
Compiler Definitions: []
Compiler Options:     []
Libraries:            ['-delayload:ole32.dll', '-delayload:shell32.dll', 'C:/llvm-10/lib/LLVMAMDGPUAsmParser.lib', 'C:/llvm-10/lib/LLVMAMDGPUCodeGen.lib', 'C:/llvm-10/lib/LLVMAMDGPUDesc.lib', 'C:/llvm-10/lib/LLVMAMDGPUDisassembler.lib', 'C:/llvm-10/lib/LLVMAMDGPUInfo.lib', 'C:/llvm-10/lib/LLVMAMDGPUUtils.lib', 'C:/llvm-10/lib/LLVMAggressiveInstCombine.lib', 'C:/llvm-10/lib/LLVMAnalysis.lib', 'C:/llvm-10/lib/LLVMAsmParser.lib', 'C:/llvm-10/lib/LLVMAsmPrinter.lib', 'C:/llvm-10/lib/LLVMBinaryFormat.lib', 'C:/llvm-10/lib/LLVMBitReader.lib', 'C:/llvm-10/lib/LLVMBitWriter.lib', 'C:/llvm-10/lib/LLVMBitstreamReader.lib', 'C:/llvm-10/lib/LLVMCFGuard.lib', 'C:/llvm-10/lib/LLVMCodeGen.lib', 'C:/llvm-10/lib/LLVMCore.lib', 'C:/llvm-10/lib/LLVMCoroutines.lib', 'C:/llvm-10/lib/LLVMCoverage.lib', 'C:/llvm-10/lib/LLVMDebugInfoCodeView.lib', 'C:/llvm-10/lib/LLVMDebugInfoDWARF.lib', 'C:/llvm-10/lib/LLVMDebugInfoMSF.lib', 'C:/llvm-10/lib/LLVMDemangle.lib', 'C:/llvm-10/lib/LLVMExecutionEngine.lib', 'C:/llvm-10/lib/LLVMExtensions.lib', 'C:/llvm-10/lib/LLVMFrontendOpenMP.lib', 'C:/llvm-10/lib/LLVMGlobalISel.lib', 'C:/llvm-10/lib/LLVMHelloNew.lib', 'C:/llvm-10/lib/LLVMIRReader.lib', 'C:/llvm-10/lib/LLVMInstCombine.lib', 'C:/llvm-10/lib/LLVMInstrumentation.lib', 'C:/llvm-10/lib/LLVMLTO.lib', 'C:/llvm-10/lib/LLVMLibDriver.lib', 'C:/llvm-10/lib/LLVMLinker.lib', 'C:/llvm-10/lib/LLVMMC.lib', 'C:/llvm-10/lib/LLVMMCDisassembler.lib', 'C:/llvm-10/lib/LLVMMCJIT.lib', 'C:/llvm-10/lib/LLVMMCParser.lib', 'C:/llvm-10/lib/LLVMMIRParser.lib', 'C:/llvm-10/lib/LLVMObjCARCOpts.lib', 'C:/llvm-10/lib/LLVMObject.lib', 'C:/llvm-10/lib/LLVMOption.lib', 'C:/llvm-10/lib/LLVMPasses.lib', 'C:/llvm-10/lib/LLVMProfileData.lib', 'C:/llvm-10/lib/LLVMRemarks.lib', 'C:/llvm-10/lib/LLVMRuntimeDyld.lib', 'C:/llvm-10/lib/LLVMScalarOpts.lib', 'C:/llvm-10/lib/LLVMSelectionDAG.lib', 'C:/llvm-10/lib/LLVMSupport.lib', 'C:/llvm-10/lib/LLVMTarget.lib', 'C:/llvm-10/lib/LLVMTextAPI.lib', 'C:/llvm-10/lib/LLVMTransformUtils.lib', 'C:/llvm-10/lib/LLVMVectorize.lib', 'C:/llvm-10/lib/LLVMX86AsmParser.lib', 'C:/llvm-10/lib/LLVMX86CodeGen.lib', 'C:/llvm-10/lib/LLVMX86Desc.lib', 'C:/llvm-10/lib/LLVMX86Disassembler.lib', 'C:/llvm-10/lib/LLVMX86Info.lib', 'C:/llvm-10/lib/LLVMipo.lib', 'advapi32.lib', 'delayimp.lib', 'ole32.lib', 'psapi.lib', 'shell32.lib', 'uuid.lib']
Run-time dependency LLVM (modules: amdgpu, bitreader, bitwriter, core, coroutines, coverage, executionengine, instcombine, ipo, irreader, libdriver, linker, lto, mcdisassembler, mcjit, native, option, scalaropts, target, transformutils) found: YES 12.0.1
Pkg-config binary for MachineChoice.HOST is cached.
Determining dependency 'SPIRV-Tools' with pkg-config executable 'C:\\ProgramData\\chocolatey\\bin\\pkg-config.EXE'
env[PKG_CONFIG_PATH]: C:/llvm-10/lib/pkgconfig;C:/llvm-10/share/pkgconfig;C:/spirv-tools/lib/pkgconfig
Called `C:\ProgramData\chocolatey\bin\pkg-config.EXE --modversion SPIRV-Tools` -> 0
2021.3.0
env[PKG_CONFIG_PATH]: C:/llvm-10/lib/pkgconfig;C:/llvm-10/share/pkgconfig;C:/spirv-tools/lib/pkgconfig
Called `C:\ProgramData\chocolatey\bin\pkg-config.EXE --cflags SPIRV-Tools` -> 0
-IC:/spirv-tools/include
env[PKG_CONFIG_ALLOW_SYSTEM_LIBS]: 1
env[PKG_CONFIG_PATH]: C:/llvm-10/lib/pkgconfig;C:/llvm-10/share/pkgconfig;C:/spirv-tools/lib/pkgconfig
Called `C:\ProgramData\chocolatey\bin\pkg-config.EXE --libs SPIRV-Tools` -> 0
-LC:/spirv-tools/lib -lSPIRV-Tools-opt -lSPIRV-Tools -lSPIRV-Tools-link
env[PKG_CONFIG_PATH]: C:/llvm-10/lib/pkgconfig;C:/llvm-10/share/pkgconfig;C:/spirv-tools/lib/pkgconfig
Called `C:\ProgramData\chocolatey\bin\pkg-config.EXE --libs SPIRV-Tools` -> 0
-LC:/spirv-tools/lib -lSPIRV-Tools-opt -lSPIRV-Tools -lSPIRV-Tools-link
Run-time dependency spirv-tools found: YES 2021.3.0
Pkg-config binary for MachineChoice.HOST is cached.
Determining dependency 'LLVMSPIRVLib' with pkg-config executable 'C:\\ProgramData\\chocolatey\\bin\\pkg-config.EXE'
env[PKG_CONFIG_PATH]: C:/llvm-10/lib/pkgconfig;C:/llvm-10/share/pkgconfig;C:/spirv-tools/lib/pkgconfig
Called `C:\ProgramData\chocolatey\bin\pkg-config.EXE --modversion LLVMSPIRVLib` -> 0
12.0.0.0
env[PKG_CONFIG_PATH]: C:/llvm-10/lib/pkgconfig;C:/llvm-10/share/pkgconfig;C:/spirv-tools/lib/pkgconfig
Called `C:\ProgramData\chocolatey\bin\pkg-config.EXE --cflags LLVMSPIRVLib` -> 0
-IC:/llvm-10/include
env[PKG_CONFIG_ALLOW_SYSTEM_LIBS]: 1
env[PKG_CONFIG_PATH]: C:/llvm-10/lib/pkgconfig;C:/llvm-10/share/pkgconfig;C:/spirv-tools/lib/pkgconfig
Called `C:\ProgramData\chocolatey\bin\pkg-config.EXE --libs LLVMSPIRVLib` -> 0
-LC:/llvm-10/lib -lLLVMSPIRVLib
env[PKG_CONFIG_PATH]: C:/llvm-10/lib/pkgconfig;C:/llvm-10/share/pkgconfig;C:/spirv-tools/lib/pkgconfig
Called `C:\ProgramData\chocolatey\bin\pkg-config.EXE --libs LLVMSPIRVLib` -> 0
-LC:/llvm-10/lib -lLLVMSPIRVLib
Run-time dependency llvmspirvlib found: YES 12.0.0.0
Library clangBasic found: YES
Library clangAST found: YES
Library clangCodeGen found: YES
Library clangLex found: YES
Library clangDriver found: YES
Library clangFrontend found: YES
Library clangFrontendTool found: YES
Library clangHandleCXX found: YES
Library clangHandleLLVM found: YES
Library clangSerialization found: YES
Library clangSema found: YES
Library clangParse found: YES
Library clangEdit found: YES
Library clangAnalysis found: YES
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmp9ok8533o
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmp9ok8533o\testfile.cpp /FeC:\builds\mesa\mesa\_build\meson-private\tmp9ok8533o\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od version.lib /link /nologo /release /nologo 

Code:
 int main(void) { return 0; }

Compiler stdout:
 testfile.cpp

Compiler stderr:
 
Library version found: YES
Pkg-config binary for MachineChoice.HOST is cached.
Determining dependency 'libelf' with pkg-config executable 'C:\\ProgramData\\chocolatey\\bin\\pkg-config.EXE'
env[PKG_CONFIG_PATH]: C:/llvm-10/lib/pkgconfig;C:/llvm-10/share/pkgconfig;C:/spirv-tools/lib/pkgconfig
Called `C:\ProgramData\chocolatey\bin\pkg-config.EXE --modversion libelf` -> 1

CMake binary for MachineChoice.HOST is cached.
Preliminary CMake check failed. Aborting.
Run-time dependency libelf found: NO (tried pkgconfig and cmake)
Looking for a fallback subproject for the dependency libelf

Executing subproject libelf 

Project name: libelf-lfg-win32
Project version: 1.0.0
C compiler for the host machine: cl (msvc 19.29.30038.1 "Microsoft (R) C/C++ Optimizing Compiler Version 19.29.30038.1 for x64")
C linker for the host machine: link link 14.29.30038.1
C compiler for the build machine: cl (msvc 19.29.30038.1 "Microsoft (R) C/C++ Optimizing Compiler Version 19.29.30038.1 for x64")
C linker for the build machine: link link 14.29.30038.1
Build targets in project: 4
Subproject libelf finished.

Dependency libelf from subproject subprojects/libelf-lfg-win32-1.0.0-freebsd-12.1.0 found: YES 1.0.0
Pkg-config binary for MachineChoice.HOST is cached.
Determining dependency 'valgrind' with pkg-config executable 'C:\\ProgramData\\chocolatey\\bin\\pkg-config.EXE'
env[PKG_CONFIG_PATH]: C:/llvm-10/lib/pkgconfig;C:/llvm-10/share/pkgconfig;C:/spirv-tools/lib/pkgconfig
Called `C:\ProgramData\chocolatey\bin\pkg-config.EXE --modversion valgrind` -> 1

Run-time dependency valgrind found: NO (tried pkgconfig)
Program win_flex found: YES (C:\ProgramData\chocolatey\bin\win_flex.EXE)
Program win_bison found: YES (C:\ProgramData\chocolatey\bin\win_bison.EXE)
Pkg-config binary for MachineChoice.HOST is cached.
Determining dependency 'libunwind' with pkg-config executable 'C:\\ProgramData\\chocolatey\\bin\\pkg-config.EXE'
env[PKG_CONFIG_PATH]: C:/llvm-10/lib/pkgconfig;C:/llvm-10/share/pkgconfig;C:/spirv-tools/lib/pkgconfig
Called `C:\ProgramData\chocolatey\bin\pkg-config.EXE --modversion libunwind` -> 1

CMake binary for MachineChoice.HOST is cached.
Preliminary CMake check failed. Aborting.
Run-time dependency libunwind found: NO (tried pkgconfig and cmake)
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmppdquo3ae
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmppdquo3ae\testfile.c /FeC:\builds\mesa\mesa\_build\meson-private\tmppdquo3ae\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od sensors.lib /link /nologo /release /nologo 

Code:
 int main(void) { return 0; }

Compiler stdout:
 testfile.c
LINK : fatal error LNK1181: cannot open input file 'sensors.lib'

Compiler stderr:
 
Library sensors found: NO
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmp64jckozq
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmp64jckozq\testfile.c /FeC:\builds\mesa\mesa\_build\meson-private\tmp64jckozq\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od /link -Wl,--gc-sections 

Code:
 int main(void) { return 0; }

Compiler stdout:
 testfile.c
LINK : warning LNK4044: unrecognized option '/Wl,--gc-sections'; ignored

Compiler stderr:
 
Compiler for C supports link arguments -Wl,--gc-sections: NO 
Program dumpbin found: YES (C:\BuildTools\VC\Tools\MSVC\14.29.30037\bin\HostX64\x64\dumpbin.EXE)
Program symbols-check.py found: YES (c:\python3\python.exe C:\builds\mesa\mesa\bin\symbols-check.py)
Program install_megadrivers.py found: YES (c:\python3\python.exe C:\builds\mesa\mesa\bin\install_megadrivers.py)
Program xmllint found: NO
Adding test "u_atomic"
Adding test "blob"
Adding test "rb_tree"
Adding test "roundeven"
Adding test "bitset"
Adding test "register_allocate"
Adding test "u_debug_stack"
Adding test "u_qsort"
Adding test "process"
Adding test "int_min_max"
Adding test "dag"
Adding test "fast_idiv_by_const"
Adding test "fast_urem_by_const"
Adding test "clear"
Adding test "collision"
Adding test "delete_and_lookup"
Adding test "delete_management"
Adding test "destroy_callback"
Adding test "insert_and_lookup"
Adding test "insert_many"
Adding test "null_destroy"
Adding test "random_entry"
Adding test "remove_key"
Adding test "remove_null"
Adding test "replacement"
Adding test "string_buffer"
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmp0gxtv456
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmp0gxtv456\testfile.c /nologo /showIncludes /EP /nologo /showIncludes /EP /Od /std:c17 

Code:
 
        #ifdef __has_include
         #if !__has_include("sys/time.h")
          #error "Header 'sys/time.h' could not be found"
         #endif
        #else
         #include <sys/time.h>
        #endif
Compiler stdout:
 

        
         
          
Compiler stderr:
 testfile.c
C:\builds\mesa\mesa\_build\meson-private\tmp0gxtv456\testfile.c(4): fatal error C1189: #error:  "Header 'sys/time.h' could not be found"

Has header "sys/time.h" : NO 
Adding test "vma_random"
Adding test "set"
Adding test "sparse_array_multi_threaded"
Adding test "srgb"
Adding test "u_format_test"
Adding test "u_format_compatible_test"
Adding test "vector"
Adding test "shared-glapi-test"
Adding test "shared-glapi symbols check"
Adding test "es2-ABI-check"
env[PKG_CONFIG_PATH]: C:/llvm-10/lib/pkgconfig;C:/llvm-10/share/pkgconfig;C:/spirv-tools/lib/pkgconfig
Called `C:\ProgramData\chocolatey\bin\pkg-config.EXE --variable=libexecdir libclc` -> 0
C:/llvm-10/share/clc
Got pkgconfig variable libexecdir : C:/llvm-10/share/clc
Program zstd found: NO
Adding test "nir_builder"
Adding test "nir_control_flow"
Adding test "nir_core"
Adding test "nir_vars"
Adding test "nir_algebraic_parser"
Adding test "negative_equal"
Adding test "comparison_pre"
Adding test "load_store_vectorizer"
Adding test "nir_serialize_test"
Adding test "nir_opt_if"
Adding test "nir_lower_returns"
Adding test "ssa_def_bits_used"
Adding test "algebraic"
Adding test "avail_vis"
Adding test "volatile"
Adding test "general_ir_test"
Adding test "uniform_initializer_test"
Adding test "sampler_types_test"
Adding test "list_iterators"
Adding test "glsl compiler warnings"
Adding test "glsl optimization"
Program decode.py found: YES (c:\python3\python.exe C:\builds\mesa\mesa\src\compiler\isaspec\decode.py)
Program encode.py found: YES (c:\python3\python.exe C:\builds\mesa\mesa\src\compiler\isaspec\encode.py)
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpqjhwjmu4
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpqjhwjmu4\testfile.cpp /FoC:\builds\mesa\mesa\_build\meson-private\tmpqjhwjmu4\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od -Wunused-variable -Wno-unused-variable 

Code:
 extern int i;
int i;

Compiler stdout:
 
Compiler stderr:
 cl : Command line error D8021 : invalid numeric argument '/Wunused-variable'

Compiler for C++ supports arguments -Wno-unused-variable: NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpqt757gst
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpqt757gst\testfile.cpp /FoC:\builds\mesa\mesa\_build\meson-private\tmpqt757gst\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od -Wunused-local-typedefs -Wno-unused-local-typedefs 

Code:
 extern int i;
int i;

Compiler stdout:
 
Compiler stderr:
 cl : Command line error D8021 : invalid numeric argument '/Wunused-local-typedefs'

Compiler for C++ supports arguments -Wno-unused-local-typedefs: NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmp4_fguane
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmp4_fguane\testfile.cpp /FoC:\builds\mesa\mesa\_build\meson-private\tmp4_fguane\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od -Wunused-but-set-variable -Wno-unused-but-set-variable 

Code:
 extern int i;
int i;

Compiler stdout:
 
Compiler stderr:
 cl : Command line error D8021 : invalid numeric argument '/Wunused-but-set-variable'

Compiler for C++ supports arguments -Wno-unused-but-set-variable: NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpv0zc6fqi
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpv0zc6fqi\testfile.cpp /FoC:\builds\mesa\mesa\_build\meson-private\tmpv0zc6fqi\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od -Wmaybe-uninitialized -Wno-maybe-uninitialized 

Code:
 extern int i;
int i;

Compiler stdout:
 
Compiler stderr:
 cl : Command line error D8021 : invalid numeric argument '/Wmaybe-uninitialized'

Compiler for C++ supports arguments -Wno-maybe-uninitialized: NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpkg6ed3tr
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpkg6ed3tr\testfile.cpp /FoC:\builds\mesa\mesa\_build\meson-private\tmpkg6ed3tr\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od -fno-exceptions 

Code:
 extern int i;
int i;

Compiler stdout:
 testfile.cpp

Compiler stderr:
 cl : Command line warning D9002 : ignoring unknown option '-fno-exceptions'

Compiler for C++ supports arguments -fno-exceptions: NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpx0o7ukva
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpx0o7ukva\testfile.cpp /FoC:\builds\mesa\mesa\_build\meson-private\tmpx0o7ukva\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od -fno-rtti 

Code:
 extern int i;
int i;

Compiler stdout:
 testfile.cpp

Compiler stderr:
 cl : Command line warning D9002 : ignoring unknown option '-fno-rtti'

Compiler for C++ supports arguments -fno-rtti: NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpoci3ucgm
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpoci3ucgm\testfile.cpp /FoC:\builds\mesa\mesa\_build\meson-private\tmpoci3ucgm\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od -Wimplicit-fallthrough 

Code:
 extern int i;
int i;

Compiler stdout:
 
Compiler stderr:
 cl : Command line error D8021 : invalid numeric argument '/Wimplicit-fallthrough'

Compiler for C++ supports arguments -Wimplicit-fallthrough: NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpbycxi6cv
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpbycxi6cv\testfile.cpp /FoC:\builds\mesa\mesa\_build\meson-private\tmpbycxi6cv\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od -Wshadow 

Code:
 extern int i;
int i;

Compiler stdout:
 
Compiler stderr:
 cl : Command line error D8021 : invalid numeric argument '/Wshadow'

Compiler for C++ supports arguments -Wshadow: NO 
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpe9h8sky6
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpe9h8sky6\testfile.cpp /FoC:\builds\mesa\mesa\_build\meson-private\tmpe9h8sky6\output.obj /nologo /showIncludes /c /nologo /showIncludes /c /Od -DNOMINMAX 

Code:
 extern int i;
int i;

Compiler stdout:
 testfile.cpp

Compiler stderr:
 
Compiler for C++ supports arguments -DNOMINMAX: YES 
Using cached compile:
Cached command line:   

Code:
 extern int i;
int i;

Cached compiler stdout:
 
Cached compiler stderr:
 cl : Command line error D8021 : invalid numeric argument '/Wimplicit-fallthrough'

Compiler for C supports arguments -Wimplicit-fallthrough: NO (cached)
Using cached compile:
Cached command line:   

Code:
 extern int i;
int i;

Cached compiler stdout:
 
Cached compiler stderr:
 cl : Command line error D8021 : invalid numeric argument '/Wshadow'

Compiler for C supports arguments -Wshadow: NO (cached)
Adding test "radv symbols check"
Adding test "dxil_buffer"
Adding test "clc_compiler_test"
Adding test "main-test"
Adding test "lp_test_format"
Adding test "lp_test_arit"
Adding test "lp_test_blend"
Adding test "lp_test_conv"
Adding test "lp_test_printf"
Adding test "zink_format_test"
Adding test "osmesa-render"
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpm1q8oyxo
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpm1q8oyxo\testfile.cpp /FeC:\builds\mesa\mesa\_build\meson-private\tmpm1q8oyxo\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od opengl32.lib /link /nologo /release /nologo 

Code:
 int main(void) { return 0; }

Compiler stdout:
 testfile.cpp

Compiler stderr:
 
Library opengl32 found: YES
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmpd7az6qyo
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmpd7az6qyo\testfile.cpp /FeC:\builds\mesa\mesa\_build\meson-private\tmpd7az6qyo\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od d3d12.lib /link /nologo /release /nologo 

Code:
 int main(void) { return 0; }

Compiler stdout:
 testfile.cpp

Compiler stderr:
 
Library d3d12 found: YES
Adding test "wgl"
Adding test "pipe_barrier_test"
Adding test "u_half_test"
Adding test "u_prim_verts_test"
Adding test "st_format_test"
Adding test "st_renumerate_test"
Adding test "st-array-merge-test"
Running compile:
Working directory:  C:\builds\mesa\mesa\_build\meson-private\tmp3z2i1v5t
Command line:  cl C:\builds\mesa\mesa\_build\meson-private\tmp3z2i1v5t\testfile.c /FeC:\builds\mesa\mesa\_build\meson-private\tmp3z2i1v5t\output.exe /nologo /showIncludes /MT /nologo /showIncludes /Od /std:c17 kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib 

Code:
 
        #define mincore meson_disable_define_of_mincore
        
        #include <limits.h>
        #undef mincore
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char mincore (void);
        
        #if defined __stub_mincore || defined __stub___mincore
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return mincore ();
        }
Compiler stdout:
 testfile.c
Note: including file: C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\limits.h
Note: including file:  C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vcruntime.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\sal.h
Note: including file:    C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\concurrencysal.h
Note: including file:   C:\BuildTools\VC\Tools\MSVC\14.29.30037\include\vadefs.h
testfile.obj : error LNK2019: unresolved external symbol mincore referenced in function main
C:\builds\mesa\mesa\_build\meson-private\tmp3z2i1v5t\output.exe : fatal error LNK1120: 1 unresolved externals

Compiler stderr:
 
Checking for function "mincore" : NO 
Adding test "egl-symbols-check"
Adding test "egl-entrypoint-check"
Message: Configuration summary:
        
        prefix:          C:\builds\mesa\mesa\_install
        libdir:          lib
        includedir:      include
        
        OpenGL:          yes (ES1: no ES2: yes)
        
        OSMesa:          libosmesa
        
        EGL:             yes
        EGL drivers:     builtin:wgl
        EGL/Vulkan/VL platforms:   windows surfaceless surfaceless
        GBM:             no
        
        Vulkan drivers:  swrast amd
        Vulkan ICD dir:  share/vulkan/icd.d
        
        llvm:            yes
        llvm-version:    12.0.1
        
        Gallium drivers: swrast d3d12 zink
        Gallium st:      mesa
        HUD lmsensors:   no
        
        Shared-glapi:    yes
        
        Perfetto:        no
        Perfetto ds:     auto

Build targets in project: 247

mesa 21.3.0-devel

  Subprojects
    DirectX-Headers: YES
    libelf         : YES
    zlib           : YES

Option buildtype is: release [default: debugoptimized]
Option b_ndebug is: false [default: if-release]
Option c_std is: c17 [default: c11]
Option cpp_std is: vc++latest [default: c++14]
Found ninja-1.10.2 at C:\ProgramData\chocolatey\bin\ninja.EXE
Command line for building ['subprojects\\libelf-lfg-win32-1.0.0-freebsd-12.1.0\\libelf.a'] is long, using a response file
Command line for building ['src\\util\\libmesa_util.a'] is long, using a response file
Command line for building ['src\\compiler\\nir\\libnir.a'] is long, using a response file
Command line for building ['src\\compiler\\glsl\\libglsl.a'] is long, using a response file
Command line for building ['src\\vulkan\\wsi\\libvulkan_wsi.a'] is long, using a response file
Command line for building ['src\\amd\\vulkan\\vulkan_radeon.dll'] is long, using a response file
Command line for building ['src\\microsoft\\spirv_to_dxil\\libspirv_to_dxil.a'] is long, using a response file
Command line for building ['src\\mesa\\libmesa_common.a'] is long, using a response file
Command line for building ['src\\mesa\\libmesa_classic.a'] is long, using a response file
Command line for building ['src\\mesa\\libmesa_gallium.a'] is long, using a response file
Command line for building ['src\\gallium\\auxiliary\\libgallium.a'] is long, using a response file
Command line for building ['src\\gallium\\drivers/softpipe\\libsoftpipe.a'] is long, using a response file
Command line for building ['src\\gallium\\drivers/llvmpipe\\libllvmpipe.a'] is long, using a response file
Command line for building ['src\\gallium\\frontends/lavapipe\\liblavapipe_st.a'] is long, using a response file
!meson_ci!/ci_include "C:\builds\mesa\mesa\_build\build.ninja"
